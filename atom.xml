<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hakan Tuncer's Blog]]></title>
  <link href="http://www.hakantuncer.com/atom.xml" rel="self"/>
  <link href="http://www.hakantuncer.com/"/>
  <updated>2016-07-16T15:31:20+02:00</updated>
  <id>http://www.hakantuncer.com/</id>
  <author>
    <name><![CDATA[Hakan Tuncer]]></name>
    <email><![CDATA[hakantuncer@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[After NDC Oslo 2016]]></title>
    <link href="http://www.hakantuncer.com/blog/2016/06/13/after-ndc-oslo-2016/"/>
    <updated>2016-06-13T21:41:44+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2016/06/13/after-ndc-oslo-2016</id>
    <content type="html"><![CDATA[<p>In my <a href="http://www.hakantuncer.com/blog/2016/06/01/ndc-oslo-2016/">previous post</a> I&rsquo;d talked about my plans in NDC Oslo, including<br/>
all the sessions and the 2-day workshop I was planning to attend.</p>

<p>It&rsquo;s been a great experience. I came back with good memories and learned a few things too. NDC conferences usually
feature high quality content and good speakers, this one also lived up to the expectations.</p>

<p>I would like to share some of the highlights of the conference which, of course, are based on my perspective
and interests.</p>

<h2>Workshop: &ldquo;Microservice development&rdquo;</h2>

<p><img src="http://www.hakantuncer.com/assets/After_NDCOslo2016/Microservices-Development-Workshop-1.jpg" alt="Microservices Development Workshop" /></p>

<p><a href="https://twitter.com/jbogard">Jimmy Bogard</a> and two employees from <a href="http://particular.net/nservicebus">Particular Software</a> ran the workshop. As it happens with all these type
of workshops, nearly half of the content was sort of a beginner to intermediate level while the other half was
covering more advanced and interesting scenarios. Here are some of my highlights:</p>

<ul>
<li><p>Services are automonous. They don&rsquo;t rely on other services to do their work. They also own their own
SLA &amp; uptime. They should have explicit boundaries and own their own data.</p></li>
<li><p>Isolation of services enable the use of different languages and frameworks per service. However, rather than using the
freedom of choosing a different language, it is more useful to have services choose their own data store. Homogenity
on the application side and heterogenity on the data side is more encouraged.</p></li>
<li><p>Creating service boundaries for actually solving business problems is a good idea. Take a good look at the
business domain and how it&rsquo;s compartmentalized within your company. Model your services around that structure. A
straightforward example of this is to create a service per business department or independent business unit.</p></li>
<li><p>We talked about messaging patterns. A lot of boilerplate code around messaging is handled for you by a product
called <a href="http://particular.net/nservicebus">NServiceBus (from Particular Software)</a>.</p>

<ul>
<li>Using commands only within a service boundary.</li>
<li>Using events within and across service boundaries.</li>
<li>Once you separate your service into a number of granular command and event handlers, try to be as &ldquo;dumb&rdquo; as
possible inside each of these handlers &ndash; avoid using complex patterns and abstractions as much as possible
(this at least is what Jimmy is advising).</li>
</ul>
</li>
<li><p>When building an SOA (service oriented architecture), the rule of thumb is that the first line public
service can call multiple downstream services to aggregate data but those services should never call other services.
Thus, the depth of services that are called are never more than one. This principle will help you avoid
complexity and possible high latency.</p></li>
<li><p>For this reason above (downstream services don&rsquo;t call other services) an example in the workshop used a
technique where a service codebase contains public interfaces which can be implemented by other services and shared
during development time (as nuget packages). <a href="https://github.com/Particular/Workshop/tree/master/exercises/src/04%20Integration/after/Divergent.ITOps.Interfaces">Check this code</a>
for an example of this use case.</p>

<ul>
<li>As an example, if sales domain needs to get something from customer domain, sales service
declares an interface and customer service supplies the implementation to that service.</li>
<li>This means that one service doesn&rsquo;t call the other one at runtime but instead runs that piece of code directly.</li>
<li>Note that this removes the runtime dependency but introduces development time dependency. If you&rsquo;re doing
microservices mostly for reasons around team composition and independence, this might sound less attractive to
you.</li>
</ul>
</li>
<li><p>You can find all workshop exercises <a href="https://github.com/Particular/Workshop">here on GitHub</a>.</p></li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/After_NDCOslo2016/Microservices-Development-Workshop-2.jpg" alt="Microservices Development Workshop" /></p>

<h2>Conference Highlights</h2>

<br/>


<h3>Erlang is cool, so is functional programming!</h3>

<p>Functional programming was a large and popular track in NDC Oslo. Created a lot of buzz for sure. This photo
below was taken at the end of conference day 1. I believe at the end of the conference <em>#fsharp</em>, <em>#erlang</em>, <em>#phoenix</em>
and <em>#elixir</em> were all sitting high in this top 10 list as some of the most spoken technologies.</p>

<p><img src="http://www.hakantuncer.com/assets/After_NDCOslo2016/NDC-Oslo-Twitter-Buzz.png" alt="NDC Oslo Twitter Buzz" /></p>

<p>I met <a href="https://en.wikipedia.org/wiki/Erlang_(programming_language)" target="_blank">Erlang</a> for the first time and found it
quite interesting. In Wikipedia, Erlang is described as:</p>

<blockquote><p>Erlang is a general-purpose, concurrent, functional programming language. It is also a garbage-collected runtime system.
Erlang is known for its designs that are well suited for systems with the following characteristics:</p>

<ul>
<li>Distributed</li>
<li>Fault-tolerant</li>
<li>Soft real-time</li>
<li>Highly available, non-stop applications</li>
<li>Hot swapping, where code can be changed without stopping a system.</li>
</ul>
</blockquote>

<p>Do any of these sound familiar? Welcome to the cutting edge stateful microservices technology, from 1986!</p>

<p>Lightweight processes are the main building blocks of an Erlang application:</p>

<blockquote><p>Processes are the primary means to structure an Erlang application. They are neither operating system processes
nor operating system threads, but lightweight processes that are scheduled by Erlang&rsquo;s BEAM VM.</p></blockquote>

<p>Based on my first impressions I found many conceptual similarities between Erlang and <a href="https://azure.microsoft.com/en-us/services/service-fabric/">Service Fabric</a>: the idea of
stateful and stateless services messaging each other. Erlang doesn&rsquo;t have the concept of replicas (unlike Service Fabric),
all process nodes are peers &ndash; no primary &amp; secondary relationship. Which means if a process crashes the state is
gone. Of course there are solutions to this &ndash; like <a href="https://en.wikipedia.org/wiki/Mnesia">Mnesia</a>.</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">My gut feeling after learning more about <a href="https://twitter.com/hashtag/erlang?src=hash">#erlang</a> in <a href="https://twitter.com/hashtag/ndcoslo?src=hash">#ndcoslo</a> : <a href="https://twitter.com/hashtag/servicefabric?src=hash">#servicefabric</a> is <a href="https://twitter.com/hashtag/erlang?src=hash">#erlang</a> plus some (large) churn.I still love <a href="https://twitter.com/hashtag/csharp?src=hash">#csharp</a> though</p>&mdash; Hakan Tuncer (@hakant) <a href="https://twitter.com/hakant/status/741296386856095744">June 10, 2016</a></blockquote>


<script async src="http://www.hakantuncer.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>I think I&rsquo;ll be looking into Erlang, <a href="http://www.phoenixframework.org/">Phoenix</a> and
<a href="http://elixir-lang.org/">Elixir</a> because I&rsquo;m sold to the idea that these things are pretty powerful to ignore.</p>

<br/>


<h3>Head to head session with questions from Stack Overflow</h3>

<p><img src="http://www.hakantuncer.com/assets/After_NDCOslo2016/head-to-head.jpg" alt="Head to head with Scott and Jimmy" /></p>

<p>Both <a href="https://twitter.com/odetocode">Scott Allen</a> and <a href="https://twitter.com/jbogard">Jimmy Bogard</a> are proponents of testing with less mocking. Jimmy said he doesn&rsquo;t like
using in memory database tricks or any other unrealistic testing styles. A few tricks that he spoke of were:</p>

<ul>
<li>Using database transactions without commiting in the end &ndash; to get back to a reset state after each test.</li>
<li>Using a nuget package called <a href="https://github.com/jbogard/Respawn">Respawn</a> that can cleanup the
database after each test in a clever way.</li>
<li>Using real storage during tests has been beneficial to these guys according to them (less unforeseen bugs).</li>
</ul>


<br/>


<h3>.NET Core is shaping up nicely</h3>

<p><img src="http://www.hakantuncer.com/assets/After_NDCOslo2016/dot-net-core.jpg" alt=".NET Core - Mark Rendle" /></p>

<p>ASP.NET Core looks beautiful even though the roadmap had its fair share of ups and downs for a long period. The
talk about making the Kestrel web server performant is fantastic. It turns out that creating a very performant web
server takes ridiculous amount of code optimizations. Must watch. Actually most .NET Core talks were very
interesting.</p>

<p><img src="http://www.hakantuncer.com/assets/After_NDCOslo2016/kestrel-web-server.jpg" alt="Kestrel Web Server" /></p>

<br/>


<h3>My picks</h3>

<ul>
<li><a href="http://ndcoslo.com/talk/asp.net-core-1.0-deep-dive/">Talk: ASP.NET Core 1.0 Deep Dive</a></li>
<li><a href="http://ndcoslo.com/talk/intro-to-azure-machine-learning-predict-who-survives-the-titanic/">Talk: Intro to Azure Machine Learning: Predict Who Survives the Titanic</a></li>
<li><a href="http://ndcoslo.com/talk/asp.net-core-kestrel-adventures-in-building-a-fast-web-server/">Talk: ASP.NET Core Kestrel: Adventures in building a fast web server</a></li>
<li><a href="http://ndcoslo.com/talk/play-by-play/">Talk: Head to Head #2: K. Scott Allen and Jimmy Bogard</a></li>
<li><a href="http://ndcoslo.com/talk/net-without-windows/">Talk: .NET without Windows</a></li>
<li><a href="http://ndcoslo.com/talk/is-your-code-ready-for-net-core/">Talk: Is your code ready for .NET Core?</a></li>
<li><a href="http://ndcoslo.com/talk/escaping-the-big-ball-of-mud/">Talk: Escaping the Big Ball of Mud</a></li>
<li><a href="http://ndcoslo.com/talk/sequential-concurrent-and-parallel-programming/">Talk: Sequential, Concurrent and Parallel Programming</a></li>
<li><a href="http://ndcoslo.com/talk/c-today-and-tomorrow/">Talk: C# Today and Tomorrow</a></li>
<li><a href="http://ndcoslo.com/talk/elixir-is-neat-but-what-can-you-actually-do-with-it/">Talk: Elixir Is Neat But What Can You Actually Do With It?</a></li>
</ul>


<h2>Few more photos and resources</h2>

<p>Free ebook, if you&rsquo;re interested.</p>

<p><img src="http://www.hakantuncer.com/assets/After_NDCOslo2016/free-ebook.jpg" alt="Distributed computing" /></p>

<br/>


<hr />

<p>Nice resources from the talk &ldquo;Escaping the Big Ball of Mud&rdquo;:</p>

<p><img src="http://www.hakantuncer.com/assets/After_NDCOslo2016/escaping-big-ball-of-mud.jpg" alt="Escaping the big ball of mud" /></p>

<br/>


<hr />

<p>FAQ slide from the talk &ldquo;Scale up and out with Akka.NET&rdquo;:</p>

<p><img src="http://www.hakantuncer.com/assets/After_NDCOslo2016/akka-dot-net.jpg" alt="Akka.NET" /></p>

<br/>


<hr />

<p>This BB-8 droid from Star Wars could be controlled via a tablet. I tried and miserably failed
against the challenging track.</p>

<p><img src="http://www.hakantuncer.com/assets/After_NDCOslo2016/star-wars.jpg" alt="Star Wars" /></p>

<br/>


<hr />

<p>My frequent stop. These guys were serving top class coffee:</p>

<p><img src="http://www.hakantuncer.com/assets/After_NDCOslo2016/oslo-coffee-love.jpg" alt="Oslo loves coffee" /></p>

<p>That&rsquo;s all I&rsquo;ve got for now. Thanks for reading.</p>

<p>~Hakan</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NDC Oslo 2016]]></title>
    <link href="http://www.hakantuncer.com/blog/2016/06/01/ndc-oslo-2016/"/>
    <updated>2016-06-01T20:16:43+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2016/06/01/ndc-oslo-2016</id>
    <content type="html"><![CDATA[<p>It&rsquo;s time for NDC Oslo again &ndash; happening between 6-10 June 2016. I&rsquo;m excited to be going there once again
this year.</p>

<p>First two days I&rsquo;ll be taking a workshop on the topic of <a href="http://ndcoslo.com/workshop/microservice-development-with-examples-in-nservicebus/">microservice development (with examples in NServiceBus)</a>.
Originally the speaker was <a href="https://twitter.com/UdiDahan">Udi Dahan</a> but today I saw that for
personal reasons Udi is not going to make it to the conference anymore. Instead, now <a href="https://twitter.com/jbogard">Jimmy Bogard</a>
is going to give the workshop and I&rsquo;m still up for it! I&rsquo;m hoping to learn more than a few good practices and ideas
around building maintainable and resilient service oriented architectures.</p>

<p>After the workshop 3 day long conference goodness starts. I&rsquo;ve been looking at the agenda for a while and marking
the sessions that I&rsquo;m interested in. I&rsquo;ve put my list below. My plan is to attend the first session
in each slot and see if I can watch the rest via recordings after the conference.</p>

<p>And if you&rsquo;re going to be at NDC Oslo next week and don&rsquo;t mind talking to strangers <a href="https://twitter.com/hakant">send me a tweet</a>!
Always nice to have a few drinks and meet new folks.</p>

<h2>Wednesday</h2>

<br/>


<ul>
<li><p>Keynote</p>

<ul>
<li><a href="http://ndcoslo.com/talk/keynote/">Talk: Keynote: Yesterday’s Technology is Dead, Today’s is on Life Support</a></li>
</ul>
</li>
<li><p>10:20 &ndash; 11:20</p>

<ul>
<li><a href="http://ndcoslo.com/talk/dragons_in_new_javascript/">Talk: There Still Be Dragons in the New JavaScript</a></li>
<li><a href="http://ndcoslo.com/talk/asp.net-core-1.0-deep-dive/">Talk: ASP.NET Core 1.0 Deep Dive</a></li>
</ul>
</li>
<li><p>11:40 &ndash; 12:40</p>

<ul>
<li><a href="http://ndcoslo.com/talk/cross-platform-desktop-apps-with-electron/">Talk: Cross-Platform Desktop Apps with Electron</a></li>
<li><a href="http://ndcoslo.com/talk/intro-to-azure-machine-learning-predict-who-survives-the-titanic/">Talk: Intro to Azure Machine Learning: Predict Who Survives the Titanic</a></li>
</ul>
</li>
<li><p>13:40-14:40</p>

<ul>
<li><a href="http://ndcoslo.com/talk/my-favorite-azure-security-features-and-why-you-should-care/">Talk: My Favorite Azure Security Features &ndash; and why you should care</a></li>
<li><a href="http://ndcoslo.com/talk/elastic-scaling-in-a-microservice-oriented-architecture/">Talk: Elastic scaling in a (micro)service oriented architecture</a></li>
<li><a href="http://ndcoslo.com/talk/the-sane-way-to-build-cloud-infrastructure/">Talk: The sane way to build cloud infrastructure</a></li>
</ul>
</li>
<li><p>15:00 &ndash; 16:00</p>

<ul>
<li><a href="http://ndcoslo.com/talk/scale-up-and-out-with-akka-net/">Talk: Scale up and out with Akka.NET</a></li>
<li><a href="http://ndcoslo.com/talk/universal-web-with-npm-react-and-redux-using-webpack/">Talk: Universal web with npm, React and Redux using WebPack</a></li>
</ul>
</li>
<li><p>16:20 &ndash; 17:20 (Holy cow! What a time slot&hellip;)</p>

<ul>
<li><a href="http://ndcoslo.com/talk/domain-driven-design-the-good-parts/">Talk: Domain-Driven Design: The Good Parts</a></li>
<li><a href="http://ndcoslo.com/talk/asp.net-core-kestrel-adventures-in-building-a-fast-web-server/">Talk: ASP.NET Core Kestrel: Adventures in building a fast web server</a></li>
<li><a href="http://ndcoslo.com/talk/data-modeling-with-document-stores/">Talk: Data Modeling with Document Stores</a></li>
<li><a href="http://ndcoslo.com/talk/containers-as-a-service-comparing-ecs-gks-acs-and-others/">Talk: Containers As A Service &ndash; Comparing ECS, GKS, ACS and others</a></li>
<li><a href="http://ndcoslo.com/talk/an-experience-report-from-building-a-large-react-js-redux-application/">Talk: An Experience Report from Building a Large React.js/Redux Application</a></li>
</ul>
</li>
<li><p>17:40 &ndash; 18:40</p>

<ul>
<li><a href="http://ndcoslo.com/talk/a-high-performance-solution-to-microservices-ui-composition/">Talk: A High-Performance Solution to Microservices UI Composition</a></li>
<li><a href="http://ndcoslo.com/talk/http-2-0-from-the-developers-viewpoint/">Talk: HTTP 2.0 from the Developer&rsquo;s Viewpoint</a></li>
<li><a href="http://ndcoslo.com/talk/performance-optimizations-in-the-wild/">Talk: Performance Optimizations in the Wild</a></li>
</ul>
</li>
</ul>


<h2>Thursday</h2>

<br/>


<ul>
<li><p>09:00 &ndash; 10:00</p>

<ul>
<li><a href="http://ndcoslo.com/talk/net-without-windows/">Talk: .NET without Windows</a></li>
<li><a href="http://ndcoslo.com/talk/net-data-security-hope-is-not-a-strategy/">Talk: .NET Data Security : Hope is not a Strategy</a></li>
<li><a href="http://ndcoslo.com/talk/working-distributed-how-does-it-even-work/">Talk: Working Distributed &ndash; How Does It Even Work?</a></li>
</ul>
</li>
<li><p>10:20 &ndash; 11:20</p>

<ul>
<li><a href="http://ndcoslo.com/talk/is-your-code-ready-for-net-core/">Talk: Is your code ready for .NET Core?</a></li>
<li><a href="http://ndcoslo.com/talk/stairway-to-cloud-orleans-framework-for-building-halo-scale-systems/">Talk: Stairway to Cloud: Orleans Framework for building Halo-scale systems</a></li>
<li><a href="http://ndcoslo.com/talk/sensitive-data-in-the-cloud-you-cant-do-that/">Talk: Sensitive data in the cloud? You can’t do that!</a></li>
<li><a href="http://ndcoslo.com/talk/performance-is-not-an-option-building-services-with-grpc-and-cassandra/">Talk: Performance is not an Option- Building services with GRPC and Cassandra</a></li>
</ul>
</li>
<li><p>11:40 &ndash; 12:40</p>

<ul>
<li><a href="http://ndcoslo.com/talk/servicefabric-a-whole-lot-of-microservice-awesome/">Talk: ServiceFabric &ndash; a whole lot of microservice awesome!</a></li>
<li><a href="http://ndcoslo.com/talk/micromonolith-top-anti-patterns-of-distributed-systems/">Talk: × MicroMonolith &ndash; Top anti-patterns of distributed systems</a></li>
<li><a href="http://ndcoslo.com/talk/hacking-in-2016-how-is-our-systems-broken/">Talk: Hacking in 2016 &ndash; How is our systems broken?</a></li>
<li><a href="http://ndcoslo.com/talk/optimizing-the-programmer-get-more-done-faster/">Talk: Optimizing the Programmer: Get More Done Faster</a></li>
</ul>
</li>
<li><p>13:40 &ndash; 14:40</p>

<ul>
<li><a href="http://ndcoslo.com/talk/escaping-the-big-ball-of-mud/">Talk: Escaping the Big Ball of Mud</a></li>
<li><a href="http://ndcoslo.com/talk/deploying-straight-to-production-a-guide-to-the-holy-grail/">Talk: Deploying Straight to Production: A guide to the Holy Grail</a></li>
<li><a href="http://ndcoslo.com/talk/building-an-app-in-asp-net-core-and-mvc-6-for-the-raspberry-pi/">Talk: Building an app in ASP.NET Core and MVC 6 for the Raspberry Pi</a></li>
<li><a href="http://ndcoslo.com/talk/dont-be-dilbert-survival-tactics-for-uninspiring-workplaces/">Talk: Don’t Be Dilbert: Survival Tactics for Uninspiring Workplaces</a></li>
</ul>
</li>
<li><p>15:00 &ndash; 16:00</p>

<ul>
<li><a href="http://ndcoslo.com/talk/deploying-docker-containers-on-windows-server-2016/">Talk: Deploying Docker Containers on Windows Server 2016</a></li>
<li><a href="http://ndcoslo.com/talk/sequential-concurrent-and-parallel-programming/">Talk: Sequential, Concurrent and Parallel Programming</a></li>
<li><a href="http://ndcoslo.com/talk/web-application-security-lessons-learned/">Talk: Web Application Security: Lessons Learned</a></li>
</ul>
</li>
<li><p>16:20 &ndash; 17:20</p>

<ul>
<li><a href="http://ndcoslo.com/talk/website-fuzziness/">Talk: Website Fuzziness</a></li>
<li><a href="http://ndcoslo.com/talk/deploying-kubernetes-a-container-cluster-manager/">Talk: Deploying Kubernetes, a Container Cluster Manager</a></li>
</ul>
</li>
<li><p>17:40 &ndash; 18:40</p>

<ul>
<li><a href="http://ndcoslo.com/talk/safe-at-any-speed/">Talk: Safe At Any Speed</a></li>
<li><a href="http://ndcoslo.com/talk/lessons-from-a-quarter-of-a-billion-breached-records/">Talk: Lessons from a quarter of a billion breached records</a></li>
<li><a href="http://ndcoslo.com/talk/debugging-your-communication-for-more-success-and-efficiency-in-devops/">Talk: Debugging your communication for more success and efficiency in DevOps</a></li>
<li><a href="http://ndcoslo.com/talk/logging-makes-perfect-real-world-monitoring-and-visualizations-with-riemann-and-friends/">Talk: Logging makes perfect &ndash; real-world monitoring and visualizations with Riemann and friends</a></li>
</ul>
</li>
</ul>


<h2>Friday</h2>

<br/>


<ul>
<li><p>09:00 &ndash; 10:00</p>

<ul>
<li><a href="http://ndcoslo.com/talk/load-testing-at-scale-with-azure/">Talk: Load Testing at Scale with Azure</a></li>
<li><a href="http://ndcoslo.com/talk/c-today-and-tomorrow/">Talk: C# Today and Tomorrow</a></li>
<li><a href="http://ndcoslo.com/talk/analysing-big-time-series-data-in-the-cloud/">Talk: Analysing Big Time-series Data in the Cloud</a></li>
<li><a href="http://ndcoslo.com/talk/web-performance-2016-myths-and-truths/">Talk: Web Performance 2016: Myths and Truths</a></li>
</ul>
</li>
<li><p>10:20 &ndash; 11:20</p>

<ul>
<li><a href="http://ndcoslo.com/talk/sherlock-homepage-a-detective-story-about-running-large-web-services/">Talk: Sherlock Homepage &ndash; A detective story about running large web services</a></li>
<li><a href="http://ndcoslo.com/talk/phoenix_channels/">Talk: Phoenix Channels &ndash; a Distributed PubSub and Presence Platform</a></li>
<li><a href="http://ndcoslo.com/talk/panel-launching-a-software-business/">Talk: Panel: Launching a Software Business</a></li>
</ul>
</li>
<li><p>11:40 &ndash; 12:40</p>

<ul>
<li><a href="http://ndcoslo.com/talk/go-one-language-you-should-try/">Talk: Go &ndash; one language you should try</a></li>
<li><a href="http://ndcoslo.com/talk/lightning-talks-2/">Talk: Lightning Talks</a></li>
<li><a href="http://ndcoslo.com/talk/getting-into-the-zero-downtime-deployment-world/">Talk: Getting Into the Zero Downtime Deployment World</a></li>
<li><a href="http://ndcoslo.com/talk/dns-for-developers/">Talk: DNS for Developers</a></li>
</ul>
</li>
<li><p>13:40 &ndash; 14:40</p>

<ul>
<li><a href="http://ndcoslo.com/talk/you-dont-know-node-js/">Talk: &ldquo;You Don&rsquo;t Know Node.js&rdquo;</a></li>
<li><a href="http://ndcoslo.com/talk/building-living-systems-with-hypermedia-actors/">Talk: Building living systems with hypermedia actors</a></li>
<li><a href="http://ndcoslo.com/talk/write-once-run-everywhere-is-not-a-myth/">Talk: &ldquo;Write once, run everywhere&rdquo; is not a myth</a></li>
</ul>
</li>
<li><p>15:00 &ndash; 16:00</p>

<ul>
<li><a href="http://ndcoslo.com/talk/choosing-a-javascript-framework/">Talk: Choosing a JavaScript Framework</a></li>
<li><a href="http://ndcoslo.com/talk/upgrading-javascript-to-es6-and-using-typescript-as-a-shortcut/">Talk: Upgrading JavaScript to ES6 and using TypeScript as a shortcut</a></li>
<li><a href="http://ndcoslo.com/talk/power-to-the-people/">Talk: Power to the people!</a></li>
<li><a href="http://ndcoslo.com/talk/amdahl-to-zipf-the-physics-of-software/">Talk: Amdahl to Zipf: The Physics of Software</a></li>
<li><a href="http://ndcoslo.com/talk/elixir-is-neat-but-what-can-you-actually-do-with-it/">Talk: Elixir Is Neat But What Can You Actually Do With It?</a></li>
</ul>
</li>
<li><p>16:20 &ndash; 17:20</p>

<ul>
<li><a href="http://ndcoslo.com/talk/software-testing-for-failed-projects/">Talk: Software Testing for Failed Projects</a></li>
<li><a href="http://ndcoslo.com/talk/continuous-integration-for-open-source-projects-with-travis-ci/">Talk: Continuous Integration for Open Source Projects with Travis CI</a></li>
<li><a href="http://ndcoslo.com/talk/everything-i-know-about-computers-i-learned-from-the-movies-reloaded/">Talk: Everything I know about computers, I learned from the movies: Reloaded</a></li>
</ul>
</li>
</ul>


<p>~ Hakan</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Implementing an App Walkthrough]]></title>
    <link href="http://www.hakantuncer.com/blog/2016/04/20/implementing-an-app-walkthrough/"/>
    <updated>2016-04-20T22:23:47+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2016/04/20/implementing-an-app-walkthrough</id>
    <content type="html"><![CDATA[<p>I think most professionals who design product interfaces (both physical or software interfaces) will agree
that simplicity and discoverability of an interface is a big winning factor. Simple and discoverable
interfaces are usually self explanatory and for this very reason they tend to provide great user
experiences.</p>

<p>On the other hand, this doesn&rsquo;t mean we should stop providing documentation or user manuals for our
products. A discoverable user interface with a clean, easily accessible documentation is I think what
every product deserves.</p>

<p>When it comes to user manuals or guides, I&rsquo;m so much in favor of a user manual that&rsquo;s deeply connected or
embedded to the user interface rather than a pile of content parked somewhere completely disconnected from
the actual product.</p>

<p>UI embedded manuals can be designed in many ways, one of which is through a concept called &ldquo;App Walkthrough&rdquo;.</p>

<h2>App Walkthrough</h2>

<p>From a conceptual point of view I knew what an app walkthrough is for a very long time but before I sat down
to write this post I was tempted to call it &ldquo;in-app tutorials&rdquo;. After some searching around the topic, I
discovered that it actually has a <a href="http://www.dtelepathy.com/blog/design/ux-flows-how-when-to-design-app-walkthrough">common name</a>.</p>

<blockquote><p>A walkthrough is the process of intentionally revealing functionality to a user.</p></blockquote>

<p>Implementing a successful app walkthrough is <a href="https://www.nngroup.com/articles/mobile-instructional-overlay/">not an easy endeavour at all</a>.
It&rsquo;s like a double edged sword. If you <a href="http://www.webdesignerdepot.com/2014/07/how-to-design-a-successful-web-app-walkthrough/">get it right</a>
it&rsquo;s all unicorns and butterflies. If you get it wrong you can do more harm than good.</p>

<h2>Implementing one for Hackathon Planner</h2>

<p>A couple of days ago I started flirting with the idea of implementing a walkthough for the <a href="https://github.com/hakant/HackathonPlanner">Hackathon
Planner</a>. This is what came out:</p>

<p><img src="http://www.hakantuncer.com/assets/App_Walkthrough/Hackathon-Planner-Walkthrough.gif" alt="Hackathon Planner Walkthrough" /></p>

<p>You can try it by visiting the <a href="http://hackathonplanner.s3-website.eu-central-1.amazonaws.com/">Hackathon Planner preview website</a>.
It is designed to be viewed only once and then gets out of the way forever. There are two things that I still
want to add to this:</p>

<ul>
<li>A quick opt out button on each individual step of the walkthough so that users have an easy way to exit
the tutorial without being forced to complete it.</li>
</ul>


<blockquote><p><strong>Update:</strong> Right after I wrote this blog post, I came across a tutorial that&rsquo;s built into GitHub Desktop (for
Mac). See the screenshot below. Clicking &ldquo;Got it!&rdquo; takes the user to the next step of the tutorial while
clicking the close button on the top left corner stops the tutorial. It&rsquo;s brilliant.
<br/><br/>
<img src="http://www.hakantuncer.com/assets/App_Walkthrough/GitHub_Desktop_Walkthrough.png" alt="GitHub Desktop Walkthrough" /></p></blockquote>

<ul>
<li>An overlay that makes the UI frozen while the tooltips are running. If a user doesn&rsquo;t follow the
tooltip popovers and starts clicking around, things get messy (and this is bound to happen if I
know anything about users).</li>
</ul>


<h2>Show me the code</h2>

<p>Inside the Aurelia app, I&rsquo;ve created a component called &ldquo;<em>TooltipService</em>&rdquo; which is responsible for
orchestrating the walkthrough. There&rsquo;s also a separate data holder class &ldquo;<em>Tooltips</em>&rdquo; that declaratively defines all walkthrough
steps and their contents, positions etc.</p>

<p>Tooltips are created using the <a href="http://v4-alpha.getbootstrap.com/components/popovers/">popover component from Bootstrap 4</a>
(still in alpha at the time of this writing).</p>

<br/>


<script src="https://gist.github.com/hakant/48a5b7c5a4e4f34102f393fbd80dc783.js"></script>




<br/>


<script src="https://gist.github.com/hakant/36345d12467d304e29e444430a8bf747.js"></script>


<p></p>

<p>~Hakan</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackathon Planner &amp; My experience with Aurelia so far]]></title>
    <link href="http://www.hakantuncer.com/blog/2016/04/06/hackathon-planner-and-my-experience-with-aurelia-so-far/"/>
    <updated>2016-04-06T02:00:00+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2016/04/06/hackathon-planner-and-my-experience-with-aurelia-so-far</id>
    <content type="html"><![CDATA[<p>~2 months ago <a href="http://www.hakantuncer.com/blog/2016/01/30/hackathon-planner-for-nipo-software/">I wrote about Hackathon Planner</a>
and hustled the idea as a candidate project for the next hackathon at NIPO Software. Then the hackathon day arrived.
We formed a team of 6 and spent a day working on it. Rutger shot a time lapse video from that day.</p>

<br/>




<iframe width="700" height="393" src="https://www.youtube.com/embed/GMK8vvJm87A" frameborder="0" allowfullscreen></iframe>


<p>Since then, I continue working on the Hackathon Planner whenever I find some free time here and there. Rutger also
occasionally shows up in the commit history contributing with his CSS superpowers.</p>

<p>I use <a href="https://azure.microsoft.com/en-us/">Azure</a> everyday at work and this time I want to experiement with
<a href="https://aws.amazon.com/">AWS</a>. I&rsquo;ve put up an <a href="http://hackathonplanner.s3-website.eu-central-1.amazonaws.com/">early preview of Hackathon Planner</a>
on Amazon S3. I&rsquo;ll keep updating it from this point on. At the time of this writing, it&rsquo;s only a client
side preview &ndash; actions are only saved on the local storage of the browser. Not very useful yet but it soon will be.
<a href="http://hackathonplanner.s3-website.eu-central-1.amazonaws.com/">Check it out.</a></p>

<h2>Aurelia</h2>

<p><a href="http://aurelia.io/">Aurelia</a> has been my framework of choice for this
<a href="https://en.wikipedia.org/wiki/Single-page_application">single page application</a>. It truly is a great framework in
the sense that it really gets out of your way. After I learned some of the fundamentals of Aurelia, I was basically
good to go. Some periods I even forgot that I was using a framework because it is simply not in your face. Let me
show you some code samples from the project.</p>

<br/>


<h4>ES6 and ES7 in action</h4>

<p>Aurelia takes advantage of the latest javascript standards as much as possible. Take a look at this &ldquo;nav-bar&rdquo;
component from the Hackathon Planner.</p>

<br/>


<script src="https://gist.github.com/hakant/27562e37df6d7bf59f24fd12b316045a.js"></script>


<ul>
<li>First three lines are an example of <a href="https://developer.mozilla.org/en/docs/web/javascript/reference/statements/import">ES6 module importing</a>.
This is how a javascript module can make use of code from external libraries.</li>
<li>Line #5 is an example of an <a href="https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841#.5obmn2df6">ES7 Decorator</a> that is in this case
<a href="http://eisenbergeffect.bluespire.com/aurelia-update-with-decorators-ie9-and-more/">used by Aurelia for dependency injection</a>.
Basically we&rsquo;re telling Aurelia to pass those components as constructor arguments to the NavBar component.</li>
<li>And the rest of the code is the NavBar class that is written based on the <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes">ES6 class specification</a>.
See how clean this component is &ndash; it&rsquo;s pure javascript.</li>
</ul>


<br/>  


<h4>Dynamic application root</h4>

<p>Code below is the entry point to the Hackathon Planner: &ldquo;main.js&rdquo;.</p>

<br/>


<script src="https://gist.github.com/hakant/8c94080e4c61ea04bfaf1a009dbcc25b.js"></script>


<ul>
<li>Line #2 imports a custom authentication service that I wrote and it gets resolved as a singleton instance at line #13.
In Aurelia all dependencies are registered as singleton by default (unless you specify it otherwise).</li>
<li>Based on the authentication status (line #14) aurelia app root is set either to the app or to the login
component. The ability to set arbitrary application roots is a powerful feature of Aurelia that enables some
<a href="http://patrickwalters.net/creating-multipage-apps-using-aurelia-2/">interesting scenarios</a>.</li>
<li>I borrowed this idea from <a href="http://davismj.me/blog/aurelia-auth-pt2/">Matthew James Davis</a>.</li>
</ul>


<br/>


<h4>Validation</h4>

<p>Aurelia also comes with a <a href="https://github.com/aurelia/validation">validation plugin</a> and <a href="http://blog.durandal.io/2016/03/23/aurelia-babel-6-and-jspm-update/">it&rsquo;s currently undergoing some big refactoring</a>.
It still wouldn&rsquo;t hurt to show how it looks like at the moment. Note that the @ensure decorator is recently
deprecated (which means I&rsquo;ll also need to adapt this code going forward).</p>

<p>This is a stripped down version of the project class in Hackathon Planner:</p>

<br/>


<script src="https://gist.github.com/hakant/69363eaf32e2052d2d2697335704555e.js"></script>


<ul>
<li>Line #8 and #10 sets validation rules on those properties and line #20 initializes the validation for this
object.</li>
</ul>


<p>And this event handler in &ldquo;new-card.js&rdquo; validates a project before adding or updating it:</p>

<br/>


<script src="https://gist.github.com/hakant/bbb87af2f2306724bbd1981973b8d83f.js"></script>


<br/>


<h4>Beautiful components</h4>

<p>In Aurelia, user interface components are composed of <a href="http://aurelia.io/docs.html#/aurelia/framework/1.0.0-beta.1.1.4/doc/article/creating-components">view and view-model pairs</a>.
These two are created by Aurelia&rsquo;s dependency injection framework and gets linked to each other via data binding.</p>

<p>Here is one of those pairs from the Hackathon Planner. This is how the overview page is rendered:</p>

<br/>


<script src="https://gist.github.com/hakant/6ab1a376f50b80bd115f765e16a551f4.js"></script>




<br/>


<script src="https://gist.github.com/hakant/7296309c6a7166254ac701a6b27caf47.js"></script>


<p></p>

<ul>
<li>Notice how a component is required into a template at line #2.</li>
<li>And then all projects are looped through and each one is rendered into another component called &ldquo;idea-card&rdquo;
at line #5.</li>
</ul>


<p>Thank you for reading and make sure you check out the <a href="https://github.com/hakant/HackathonPlanner">Hackathon Planner on GitHub</a>
and <a href="http://hackathonplanner.s3-website.eu-central-1.amazonaws.com/">its early preview deployment</a>.</p>

<p>~Hakan</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackathon Planner for <br/> { NIPO Software }]]></title>
    <link href="http://www.hakantuncer.com/blog/2016/01/30/hackathon-planner-for-nipo-software/"/>
    <updated>2016-01-30T09:29:33+01:00</updated>
    <id>http://www.hakantuncer.com/blog/2016/01/30/hackathon-planner-for-nipo-software</id>
    <content type="html"><![CDATA[<p>I learn best by practicing. When I only read (i.e no practicing, no note taking), I almost completely forget what I learned after a month or two. I think most people are wired this way. Think about a book you read 6 months ago and see how much of it you can still remember. It&rsquo;s scary.</p>

<p>Learning something new in programming is no different. Maybe even worse. But there&rsquo;s good news, because in programming <a href="http://jamesclear.com/learning-vs-practicing">learning by practicing</a> is very easy. You just need a computer and that&rsquo;s it! And hey, now we&rsquo;re in the cloud era. If you need more, go and get what you need with a couple of clicks! It&rsquo;s crazy how much programmers can do these days while sitting on a couch with a cup of coffee. You just need some time and passion. The rest is simply there available for you to grab.</p>

<h2>Hackathons</h2>

<p><a href="https://en.wikipedia.org/wiki/Hackathon">Hackathons</a> are a great way of <a href="http://news.uchicago.edu/article/2015/04/29/learning-doing-helps-students-perform-better-science">learning by doing</a> and we at <a href="http://niposoftware.com/">NIPO Software</a> have started making this a company tradition for a year or so, thanks to my colleague <a href="https://twitter.com/qaidj">Qa&#8217;id Jacobs</a> who took the first initiative and continues to put effort into organizing them. Below are some pictures from our last hackathon around summer of 2015.</p>

<p><img src="http://www.hakantuncer.com/assets/Hackathon_Planner/Hackathon_NIPO_1.jpg" alt="NIPO Software Summer 2015 Hackathon 1" /></p>

<p><img src="http://www.hakantuncer.com/assets/Hackathon_Planner/Hackathon_NIPO_2.jpg" alt="NIPO Software Summer 2015 Hackathon 2" /></p>

<p><img src="http://www.hakantuncer.com/assets/Hackathon_Planner/Hackathon_NIPO_3.jpg" alt="NIPO Software Summer 2015 Hackathon 3" /></p>

<p>One of the ideas during this hackathon was building a &ldquo;Hackathon Planner&rdquo;. It didn&rsquo;t get enough love, so was never picked up. Currently all ideas and team compositions are kept and maintained in an Excel file &ndash; the best and the worst tool of all times in computing history. So how about building a planner that can help people capturing ideas and forming teams around those ideas in a fun way?</p>

<h2>A Hackathon Planner &ndash; <a href="https://en.wikipedia.org/wiki/Minimum_viable_product">MVP</a></h2>

<p>A minimum viable hackathon planner;</p>

<ul>
<li>should be open source (not only <a href="http://niposoftware.com/">NIPO Software</a>, anyone or any company should be able to make use of it if they want to do so).</li>
<li>should allow capturing of ideas in a modern way (I hear <a href="https://en.wikipedia.org/wiki/Single-page_application">SPAs</a>, <a href="https://en.wikipedia.org/wiki/Markdown">Markdown</a>, subtle animations, web sockets, responsive design).</li>
<li>should allow simple ways of reacting to those ideas (i.e sending likes and possibly comments in the future).</li>
<li>should be simple to sign up and login (built in GitHub authentication?).</li>
<li>should allow a simple way of forming teams (mark the idea/team that you want to join and done!).</li>
<li>should allow live monitoring of teams as they form and evolve. It makes the team formation process more exciting to follow. Watching as ideas live and die (<a href="http://www.asp.net/signalr">signalR</a>,  <a href="http://socket.io/">socket.io</a> ?).</li>
</ul>


<p>Based on these thoughts above I&rsquo;ve created a very basic sketch that can give a general idea:</p>

<p><img src="http://www.hakantuncer.com/assets/Hackathon_Planner/Hackathon_Idea_Details.png" alt="Hackathon Planner - Mockup" /></p>

<h2>Ingredients</h2>

<p>I&rsquo;m very much into <a href="http://aurelia.io/">Aurelia</a> and <a href="https://nodejs.org/">node.js</a> these days. So that&rsquo;s what I&rsquo;ll be using. Sure I&rsquo;ll throw in a NoSQL database too and see how much these decisions will hurt me during production.</p>

<p>I saw <a href="https://twitter.com/jbogard/">@jbogard</a> putting it nicely:</p>

<blockquote class="twitter-tweet" lang="en"><p lang="en" dir="ltr">one thing i try very hard to do is to not promote any tool/language/framework/platform/pattern until i&#39;ve had to support it in production</p>&mdash; Jimmy Bogard (@jbogard) <a href="https://twitter.com/jbogard/status/691992462483677184">January 26, 2016</a></blockquote>


<p> <script async src="http://www.hakantuncer.com//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p>I recently have this theory: How cool a platform, framework, database or a language is directly proportional to the amount of pain one will get during production support.</p>

<p>So we’ll see how this one goes with the choices that I made.. if I can stop slacking off and get to finish the MVP of course.</p>

<p>~Hakan</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flow and Happiness]]></title>
    <link href="http://www.hakantuncer.com/blog/2016/01/27/flow-and-happiness/"/>
    <updated>2016-01-27T19:20:16+01:00</updated>
    <id>http://www.hakantuncer.com/blog/2016/01/27/flow-and-happiness</id>
    <content type="html"><![CDATA[<p>Every now and then I read about rich people talking about the correlation between money, happiness and self fulfillment. More often than not, it&rsquo;s the lack of correlation that they talk about.</p>

<p>There&rsquo;s no doubt that one has to have access to a certain level of income to satisfy the layers in the <a href="https://en.wikipedia.org/wiki/Maslow%27s_hierarchy_of_needs">hierarchy of needs</a>.
On the other hand it&rsquo;s a well known idea &amp; <a href="https://m.signalvnoise.com/the-day-i-became-a-millionaire-55d7dc4d8293#.7894yhemj">experience</a> that more money has diminishing returns on happiness:</p>

<p><img src="http://i.kinja-img.com/gawker-media/image/upload/s--nRxsykqe--/18ky34hbt2b12jpg.jpg" alt="money &amp; hamburger" /></p>

<blockquote class="twitter-tweet" lang="en"><p lang="en" dir="ltr">Hanging out in ibiza with a bunch of friends and partying with famous people, able to do whatever I want, and I&#39;ve never felt more isolated.</p>&mdash; Markus Persson (@notch) <a href="https://twitter.com/notch/status/637563038258868224">August 29, 2015</a></blockquote>


<script async src="http://www.hakantuncer.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>I&rsquo;ve started reading this book, <a href="http://www.amazon.com/Flow-Psychology-Happiness-Mihaly-Csikszentmihalyi-ebook/dp/B00GO8HZIW">Flow: The Psychology of Happiness</a> by <a href="https://en.wikipedia.org/wiki/Mihaly_Csikszentmihalyi">Mihaly Csikszentmihalyi</a>. It starts with a simple claim:</p>

<blockquote><p>We humans have a built-in dissatisfaction with what we have and what we own. Material world does not make us happy. Unless we can moderate this dissatisfaction and start enjoying the moment we&rsquo;ll be disappointed.</p></blockquote>

<p>This has always made perfect sense to me. Materials by themselves aren&rsquo;t worth anything. At the end of the day it all comes down to what we do with them, or most importantly, what we actually do with our lives.</p>

<p>Here&rsquo;s another excerpt from a WSJ article <a href="http://www.wsj.com/articles/can-money-buy-happiness-heres-what-science-has-to-say-1415569538">&ldquo;Can Money Buy You Happiness?&rdquo;</a>:</p>

<blockquote><p>In short, this latest research suggests, wealth alone doesn’t provide any guarantee of a good life. What matters a lot more than a big income is how people spend it. For instance, giving money away makes people a lot happier than lavishing it on themselves. And when they do spend money on themselves, people are a lot happier when they use it for experiences like travel than for material goods.</p></blockquote>

<h2>Enter Flow</h2>

<p>Lately, I&rsquo;ve been discovering that flow is one of the sources of happiness in life (maybe the most powerful one!). It is also a very rewarding state to be in. Pleasure is also a source of happiness, but unlike pleasure, the enjoyment that comes with flow leads to growth and higher levels of complexity.</p>

<p>Flow is defined in <a href="https://en.wikipedia.org/wiki/Flow_(psychology">Wikipedia</a> as:</p>

<blockquote><p>In positive psychology, flow, also known as the zone, is the mental state of operation in which a person performing an activity is fully immersed in a feeling of energized focus, full involvement, and enjoyment in the process of the activity. In essence, flow is characterized by complete absorption in what one does.</p></blockquote>

<h2>8 Major Conditions of Flow</h2>

<p>In his book, Mihaly Csikszentmihalyi describes the 8 components of flow-like activities. Know these conditions and try to apply them to what you do everyday.</p>

<ol>
<li><p><strong>Clear Goals.</strong> Knowing what we have to do very clearly. Not only the big goal, but also each step of these activities should be well defined. Playing chess, tennis or a musical instrument naturally falls into these type of activities, but with a bit of conscious effort we can apply this idea to many day to day activities.</p></li>
<li><p><strong> Immediate Feedback.</strong> Knowing how well we are doing. Getting clear and constant flow of feedback. Not having this type of feedback makes it easier to get distracted.</p></li>
<li><p><strong>Challenges of the activities are met with the right level of skills of the person.</strong> What needs to be done is in balance with what we can do. When a job is hard, demanding or very easy we can get stressed or distracted. If it&rsquo;s a match, then it becomes enjoyable.</p></li>
<li><p><strong>Feeling a focus and concentration on what you&rsquo;re doing.</strong> In flow, the split attention (that we usually have) focuses into a single beam of attention. Here we can achieve so much more.</p></li>
<li><p><strong>Everyday&rsquo;s frustrations are gone.</strong> During flow, we don&rsquo;t worry about anything anymore because our mind is not wandering &ndash; no future, nor past. It&rsquo;s a form of escape from the real world and creating different realities.</p></li>
<li><p><strong>You feel that you can be in control of your life, your actions, your experience.</strong> The sense of control is a great feeling, it&rsquo;s something that we don&rsquo;t feel during our everyday lives.</p></li>
<li><p><strong>Loose a sense of subconsciousness &ndash; the ego defense.</strong> We usually worry about how other people think of us. It&rsquo;s a feeling of self-monitoring, a state of defensiveness, a frequent questioning of how we look and so on. During flow we go beyond ego (transcendence). One of the paradoxes of flow is that during the experience we forget about ourselves but after the experience we come back stronger, because we know that we&rsquo;ve accomplished something and that makes a positive impact on our self confidence.</p></li>
<li><p><strong>Sense of time seems to be transformed.</strong> During flow, sometimes hours get condensed into minutes. Sometimes a couple of seconds feel like minutes, because so much is packed in the moment (for physical activities). Time adopts itself to your activities rather than the other way around. Rather than you boxing your life into time, you can change the time.</p></li>
</ol>


<h2>Flow vs Agile teams &amp; Open Offices</h2>

<p>Programming is a great flow-like activity. It also naturally fits all conditions above, and yet the agile movement and the open-office model has started an open season on flow: <strong>kill on sight!</strong></p>

<p>I&rsquo;ve done a <a href="https://www.google.nl/webhp?hl=en#hl=en&amp;q=open+offices+productivity">google search on &ldquo;open office productivity&rdquo;</a> and it seems like in the last few years it has attracted a lot of negative criticism. Some examples are <a href="https://www.washingtonpost.com/posteverything/wp/2014/12/30/google-got-it-wrong-the-open-office-trend-is-destroying-the-workplace/">&ldquo;The open-office trend is destroying the workplace&rdquo;</a>, <a href="https://www.americanexpress.com/us/small-business/openforum/articles/open-office-backlash-seeking-productivity-in-a-noisy-world/">&ldquo;Open-Office Backlash: Seeking Productivity in a Noisy World&rdquo;</a>, <a href="http://www.newyorker.com/currency-tag/the-open-office-trap">&ldquo;The open-office trap&rdquo;</a>.</p>

<p>There&rsquo;s not much consensus around the topic. Facebook is the <a href="http://www.forbes.com/sites/kevinkruse/2012/08/25/facebook-unveils-new-campus-will-workers-be-sick-stressed-and-dissatisfied/#f08022b13351">biggest fan of the open-office model</a> while Stack Overflow made it clear that <a href="https://blog.stackoverflow.com/2015/01/why-we-still-believe-in-private-offices/">they still believe in private offices</a>. It also appears that <a href="http://www.bbc.com/capital/story/20140911-open-office-victims-push-back">Microsoft is still pushing back the open-office trend</a> by saying: &ldquo;Too much togetherness can sap productivity and creativity&rdquo;.</p>

<p>Does flow matter to you? And how do you like to work within your team?</p>

<p>~Hakan</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zen of Architecture]]></title>
    <link href="http://www.hakantuncer.com/blog/2015/06/28/zen-of-architecture/"/>
    <updated>2015-06-28T13:19:40+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2015/06/28/zen-of-architecture</id>
    <content type="html"><![CDATA[<p><a href="http://www.hakantuncer.com/blog/2015/05/02/devintersection-and-anglebrackets-in-phoenix/">I was at DevIntersection Conference</a> in Phoenix around mid May 2015. Apart from the regular conference schedule, I took a few interesting workshops one of which was &ldquo;Zen of Architecture&rdquo; by <a href="http://www.oreilly.com/pub/au/741">Juval Lowy</a>.</p>

<p>As the name clearly implies one day workshop was all about software architecture and the ways to approach it. Juval talked about a method that he uses for decomposing systems and making design decisions.</p>

<p>It was a full day of content storm with as little breaks in between as possible (this is the Juval style I suppose). I&rsquo;ve been reviewing my notes and presentation slides thinking this can become a book if I try to write everything. So instead, this post focuses on a certain part of the workshop which I think covers the core idea.</p>

<h2>The Method</h2>

<p>Juval introduces a method which he calls &ldquo;The Method&rdquo; for decomposing a system. Achieving the right decomposition of a system is one of the most important things in software architecture. The end result of your decomposition is your architecture.</p>

<blockquote><p>For the beginner architect, there are many options<br/>
For the master architect, there are only a few</p></blockquote>

<h2>Functional Decomposition</h2>

<p>The biggest sin of any software architect. Never ever do functional decomposition!</p>

<br/>


<h4>What is it?</h4>

<ul>
<li>This is also known as the flow-chart decomposition.</li>
<li>Basing services and system components on the order of logical steps in use cases.</li>
<li>Decomposing the system based on features, functional requirements and time.</li>
</ul>


<p>Juval emotionally talks about &ldquo;functional decomposition&rdquo; easily for more than an hour. Can&rsquo;t repeat enough how bad it is and how we&rsquo;re all guilty of doing it from time to time and why we should be very conscious about resisting our bad habits. Say &ldquo;functional decomposition&rdquo; to Juval one more time and he&rsquo;ll kill you right there without blinking.</p>

<br/>


<h4>Why is it so bad?</h4>

<ul>
<li>It leads to duplicating behaviors across services.</li>
<li>It leads to explosion and bloating of services and intricate relationships inside and between them.</li>
<li>It couples multiple services to data contract.</li>
<li>Promotes implementing use cases in higher level terms thus difficult to reuse same behavior in another use case.</li>
<li>Couples services to order and current use cases.</li>
<li>Prevents single point of entry.</li>
</ul>


<br/>


<h4>Example of Functional Decomposition</h4>

<p>Here are  a few slides from the workshop that shows Functional Decomposition in action.</p>

<p><img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2021.jpg" style="border: solid;">
<img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2023.jpg" style="border: solid;">
<img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2024.jpg" style="border: solid;">
<img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2025.jpg" style="border: solid;"></p>

<h2>Volatility-Based Decomposition</h2>

<p>If you would learn one thing from this entire course this should be it, Juval mentioned repeatedly. <strong>You should always decompose a system based on volatility.</strong></p>

<ul>
<li>Identify areas of potential change and encapsulate them in services.</li>
<li>Look for functional potential changes but <strong>not domain functional</strong>. Meaning that while looking for volatility, don&rsquo;t speculate on potential changes to the nature of the business. Don&rsquo;t overdo it.</li>
<li>Implement behavior as interactions between services or subsystems.</li>
<li>Create your milestones based on integration of these services not features.</li>
</ul>


<p>This is the universal principle of good design says Juval. Encapsulate change to insulate. Do not resonate with change. Functional decomposition on the other hand maximizes the impact of change because it&rsquo;s coupled to it.</p>

<br/>


<h4>Challenges with Volatility-Based Decomposition</h4>

<p>There are challenges in creating a Volatility-Based Decomposition. First of all it usually takes longer than functional because volatility is not often self evident. On the other hand features are kept thrown at your face. People around you are feature thirsty, they&rsquo;ll keep asking for their features. You should instead fight the insanity and focus on the bigger picture and volatilities. Getting the management support is usually another challenge. Juval said architects should be responsible, fight against these opposing forces and do what is right.</p>

<br/>


<h4>Axes of volatility</h4>

<p>There are two axes of volatility.</p>

<ul>
<li>At the same customer over time</li>
<li>At the same time across customers</li>
</ul>


<p>These axes should be independent from each other. So encapsulate them from each other as well. When they&rsquo;re not independent it&rsquo;s a sign of functional decomposition.</p>

<p>Prior to architecture and decomposition, as part of requirements gathering and analysis, prepare a list of areas of volatility. Ask what could change along the axes of volatility.</p>

<br/>


<h4>Example of Volatility-Based Decomposition</h4>

<p>Below, you&rsquo;ll find 5 slides from the workshop that brainstorms on possible volatilities of a trading system. Here are some guidelines for capturing volatility:</p>

<ul>
<li>The objective is to have a mindset of &ldquo;what could possibly change?&rdquo;</li>
<li>Capturing the areas of volatility earlier is better than later. The later you figure it out the more it will cost you.</li>
<li>Once settled on the ares of volatility encapsulate them in components of architecture.</li>
<li>You don&rsquo;t need an exhaustive list. This is a process of diminishing returns. Don&rsquo;t overdo it.</li>
<li>Some volatile areas may relate too much to the nature of your business. This type of volatility is out of your scope.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2026.jpg" style="border: solid;">
<img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2027.jpg" style="border: solid;">
<img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2028.jpg" style="border: solid;">
<img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2029.jpg" style="border: solid;">
<img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2030.jpg" style="border: solid;">
<img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2032.jpg" style="border: solid;"></p>

<br/>


<h4>Let&rsquo;s analyze this decomposition.</h4>

<p>Transition from list of areas of volatility to services is hardly ever pure 1:1. Sometimes a single service encapsulates multiple areas. Some areas may map to an operational concept or may be encapsulated in a third party component.</p>

<p>Always encapsulate the data storage volatility behind data access services. Encapsulate where the storage is, what technology is used to access it and refer your storage as storage, not as database or whatever the actual technology is.</p>

<p>Following 3 slides do further analysis of the decomposition in this example. Please refer to the diagram above as you read the key points:</p>

<p><img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2034.jpg" style="border: solid;">
<img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2035.jpg" style="border: solid;">
<img src="http://www.hakantuncer.com/assets/Zen_of_Architecture/IMG_2036.jpg" style="border: solid;"></p>

<h2>Decomposition and Business</h2>

<p>Avoid encapsulating changes to the nature of your business. Because</p>

<ul>
<li>you&rsquo;ll need it very rarely</li>
<li>you&rsquo;ll be diving into speculation and speculation based design trap</li>
<li>when you do it you&rsquo;ll probably do it very poorly because there are too many unknowns (and again speculations)</li>
</ul>


<p>While designing a system for your business don&rsquo;t only focus on your own also keep your competitor in mind. Design both for you and your competitor. This is a useful posture in designing systems and it&rsquo;s not about features or functionality but it&rsquo;s about understanding the nature of the business. Keeping your competitors in mind and not only focusing on your own business will help you understand the nature of the business even better. This way you can have a better judgement about what is volatile and what is not.</p>

<h2>Decomposition and Longevity</h2>

<p>Volatility is very closely tied to longevity. The longer things do not change the longer they have till they do change or are replaced. The more frequently things change the more likely they would change in the future.</p>

<p>You must take into account impact from change regardless of your requirements. Ask yourself what has changed over the past 5-7 years and what will change in the next 5-7 years. Encapsulate things that would change within the life of your system.</p>

<h2>Further topics</h2>

<p>For the rest of the day Juval dived into</p>

<ul>
<li>layered architectures</li>
<li>typical layers</li>
<li>definition of managers, engines, resource access services and differences between them</li>
<li>open and closed architectures</li>
<li>what not to do when using &ldquo;the method&rdquo;</li>
<li>creating call graphs within system components and observing/revealing anti-patterns</li>
<li>a bonus section called &ldquo;what about agile?&rdquo;</li>
</ul>


<p>All in all it was a mind tickling workshop and I hope I could give you more than only a taste. I may write other posts about the bullet points above if/when I find the time.</p>

<p>Thanks for reading</p>

<p>Hakan</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DevIntersection &amp; AngleBrackets in Phoenix]]></title>
    <link href="http://www.hakantuncer.com/blog/2015/05/02/devintersection-and-anglebrackets-in-phoenix/"/>
    <updated>2015-05-02T13:46:06+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2015/05/02/devintersection-and-anglebrackets-in-phoenix</id>
    <content type="html"><![CDATA[<p>It&rsquo;s conference season again! Developers from <a href="http://www.niposoftware.com/" target="_blank">NIPO Software</a> were in <a href="http://channel9.msdn.com/Events/Build/2014">Build 2014</a> and <a href="http://www.ndcoslo.com">NDC Oslo 2014</a> last year. This year we&rsquo;ll be at <a href="http://www.ndcoslo.com">NDC Oslo</a> again but this time I myself will be heading to <a href="http://devintersection.com">DevIntersection</a> &amp; <a href="https://anglebrackets.org/">AngleBrackets</a> joint conferences.</p>

<p>Norwegian Developers Conference (NDC) is I think one of the best and I&rsquo;d really enjoyed it last year. But change is good.</p>

<p>Following a deep consideration I reckon that I can&rsquo;t go to Norway again&hellip; Not after all those shrimps I had to sit face to face in Oslo (see OsloFjord Cruises). My friend Bjorn is very disciplined about reminding that to me consistently.</p>

<br/>


<blockquote class="twitter-tweet" lang="en"><p lang="en" dir="ltr"><a href="https://twitter.com/hakant">@hakant</a> &quot;We are eagerly awaiting your visit Mr Tuncer&#8230;&quot; <a href="http://t.co/JuG6axnSsO">pic.twitter.com/JuG6axnSsO</a></p>&mdash; Bjorn Coltof (@bjorn_coltof) <a href="https://twitter.com/bjorn_coltof/status/593866800149995521">April 30, 2015</a></blockquote>


<p> <script async src="http://www.hakantuncer.com//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<h2>What&rsquo;s going to happen there</h2>

<p>DevIntersection has a number of tracks which are called &ldquo;intersections&rdquo;:</p>

<p><img src="http://www.hakantuncer.com/assets/AngleBrackets_DevIntersection/devintersection_tracks.png" alt="DevIntersection Tracks" /></p>

<p>ASP.NET, Visual Studio and Azure intersections are grouped together since they&rsquo;re highly related to each other. This group of tracks will be my main interest in Phoenix together with the bonus open web event: <a href="https://anglebrackets.org/">anglebrackets</a>.</p>

<p>An exciting aspect of DevIntersection 2015 is that it&rsquo;s the first conference after <a href="http://channel9.msdn.com/Events/Build/2015">Build 2015</a> at which Microsoft made <a href="http://venturebeat.com/2015/04/29/everything-that-happened-at-the-2015-microsoft-build-developer-conference/">a number of big announcements</a>. There&rsquo;s a more detailed list and link aggregation about Build 2015 <a href="http://blog.cwa.me.uk/2015/04/30/the-morning-brew-1851/">here</a> and <a href="http://blog.cwa.me.uk/2015/05/01/the-morning-brew-1852/">here</a> which I highly recommend.</p>

<p>Here is a piece from the official event site:</p>

<blockquote><p>We invite you to the most dynamic developer event in our industry at the next DEVintersection, May 2015. This event is POST BUILD and IGNITE which will allow our presenters to go deep into the new releases and technologies announced. We will focus on Visual Studio, ASP.net, HTML5, Microsoft Azure, XAML, ALM, Architecture, Design and in the bonus co-located open web event anglebrackets we feature Angular JS, HTML5, CSS, Java Script, SPA, SEO, Speech enabled Mobile Apps, Design and much more.</p></blockquote>

<h2>The Schedule</h2>

<p>I&rsquo;ll be attending three workshops. Two of them are before the conference and last one is after the conference on Friday. Each workshop is a day long.</p>

<h2><img src="http://www.hakantuncer.com/assets/AngleBrackets_DevIntersection/DevIntersection%20Workshops_1.png" alt="DevIntersection Tracks" /></h2>

<h2><img src="http://www.hakantuncer.com/assets/AngleBrackets_DevIntersection/DevIntersection%20Workshops_2.png" alt="DevIntersection Tracks" /></h2>

<p>And for the conference itself, I&rsquo;ve looked at the schedule and marked the sessions I&rsquo;m interested in so far. For a number of slots I&rsquo;ve picked more than one session for now &ndash; I&rsquo;ll have to pick one of them on the spot.</p>

<h2><img src="http://www.hakantuncer.com/assets/AngleBrackets_DevIntersection/DevIntersection_Schedule_Tuesday.png" alt="DevIntersection Tracks" /></h2>

<h2><img src="http://www.hakantuncer.com/assets/AngleBrackets_DevIntersection/DevIntersection_Schedule_Wednesday.png" alt="DevIntersection Tracks" /></h2>

<p><img src="http://www.hakantuncer.com/assets/AngleBrackets_DevIntersection/DevIntersection_Schedule_Thursday.png" alt="DevIntersection Tracks" /></p>

<p>As usual I&rsquo;ll be sharing my experiences from the event on twitter and facebook. You can follow me on twitter using <a href="https://twitter.com/hakant">@hakant</a>. And in case you&rsquo;re reading this and also going to DevIntersection in May let&rsquo;s connect and meet there!</p>

<p>Hakan</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes on Finalization and Disposition in .NET]]></title>
    <link href="http://www.hakantuncer.com/blog/2015/03/12/finalization-and-disposition-in-net/"/>
    <updated>2015-03-12T22:04:15+01:00</updated>
    <id>http://www.hakantuncer.com/blog/2015/03/12/finalization-and-disposition-in-net</id>
    <content type="html"><![CDATA[<p>Have you ever thought why disposition pattern is designed the way it is? I hadn&rsquo;t. Sometimes we learn things along the way and never question its basics or roots again. We do it that way because we&rsquo;re told so or because it just worked so far and we never looked back.</p>

<p>Nicole Calinoiu&rsquo;s talk from NDC Oslo taught me many things one of which is how IDisposable pattern is designed and became the way it is. It&rsquo;s an awesome talk, one that I can strongly recommend. I&rsquo;ve embedded the video at the bottom of this page, make sure to check it out.</p>

<p>I saw the talk twice and wanted to take notes for myself. Notes that I can revisit when the details get blurry in my head six months or a year down the path. I&rsquo;ve also double checked or dived into some other details through MSDN and included those in the notes as well.</p>

<h2>Finalization</h2>

<ul>
<li><p>Never ever set any object to NULL to &ldquo;help&rdquo; Garbage Collector do his job. You&rsquo;re not helping him and even making things worse.</p></li>
<li><p>Although .NET Runtime knows about cleaning up memory really well, it can&rsquo;t possibly know the shared resources (file system, network connections, registery etc&hellip;) that your objects are using. Finalization is the object&rsquo;s opportunity to cleanup those resources when it&rsquo;s about to be removed from the memory.</p></li>
<li><p>If a .NET object overrides the method Object.Finalize(), the Garbage Collector will call the Finalize method before cleaning up the object from memory.</p></li>
<li><p>If the object does not override the method Finalize, Garbage Collector doesn&rsquo;t finalize the object (obviously). Here is what <a href="https://msdn.microsoft.com/en-us/library/system.object.finalize%28v=vs.110%29.aspx" target="_blank">MSDN</a> says:</p></li>
</ul>


<blockquote><p>The garbage collector does not mark types derived from Object for finalization unless they override the Finalize method.</p></blockquote>

<ul>
<li>Now comes the part that&rsquo;s obscure in the MSDN documentation. <a href="https://msdn.microsoft.com/en-us/library/system.object.finalize%28v=vs.110%29.aspx" target="_blank">MSDN</a> says (emphasis mine):</li>
</ul>


<blockquote><p>You should override Finalize for a class that uses <strong>unmanaged resources</strong> such as file handles or database connections that must be released when the managed object that uses them is discarded during garbage collection.</p></blockquote>

<ul>
<li><p><strong>Unmanaged resources</strong> mentioned in the documentation are <strong>NOT</strong> the managed wrappers. If you have code that directly uses IntPtr and DllImport then you&rsquo;re using unmanaged resources and you need to be thinking about Finalization.</p></li>
<li><p>Managed wrappers have their own Finalizers (hopefully) so it&rsquo;s not your responsibility to supply another Finalizer on top of that. But if you have any code in a class that looks like the one below, then you need a Finalizer for that specific class.</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
<span class='line'>2</span>
<span class='line'>3</span>
<span class='line'>4</span>
<span class='line'>5</span>
<span class='line'>6</span>
</pre></td><td class='code' width='100%'><pre><code class='csharp'><div class='line'><span class="na">[DllImport(&quot;advapi32.dll&quot;, CharSet= CharSet.Auto, SetLastError=true)]</span>
</div><div class='line'><span class="k">private</span> <span class="k">static</span> <span class="k">extern</span> <span class="kt">int</span> <span class="nf">RegOpenKeyEx</span><span class="p">(</span><span class="n">IntPtr</span> <span class="n">hKey</span><span class="p">,</span>
</div><div class='line'>                                       <span class="n">String</span> <span class="n">lpSubKey</span><span class="p">,</span>
</div><div class='line'>                                       <span class="kt">int</span> <span class="n">ulOptions</span><span class="p">,</span>
</div><div class='line'>                                       <span class="kt">int</span> <span class="n">samDesired</span><span class="p">,</span>
</div><div class='line'>                                       <span class="k">out</span> <span class="n">IntPtr</span> <span class="n">phkResult</span><span class="p">);</span></div></code></pre></td></tr></table></div></figure>


<p></p>

<ul>
<li><p>Writing an <strong>unnecessary</strong> Finalizer comes with a cost: delaying the cleanup process of your objects. Finalization brings extra steps to the cleaning process (adding those objects to Finalization queue and running their Finalization logic in a separate thread) which delay freeing up memory for those objects. So beware.</p></li>
<li><p>Finalizers should not access any managed resources. Any managed resource at that point could already be harvested by garbage collector. So basically none of the managed objects can be trusted to exist. Finalizers should only cleanup the unmanaged resources and return.</p></li>
</ul>


<h2>Disposition</h2>

<ul>
<li><p>Finalization happens when the Garbage Collector &ldquo;feels like it&rdquo;. In general you don&rsquo;t have (and shouldn&rsquo;t take) any control on when the GC is running or not. But wouldn&rsquo;t it be nice to cleanup and let go of those shared resources when they&rsquo;re not needed anymore? Hell yeah. It would be terrible to keep locking a file and wait until GC comes to clean it up. This is exactly why Disposition exists.</p></li>
<li><p>When a class implements IDisposable it is basically declaring that it needs to be cleaned up. Whenever you&rsquo;re done with an IDisposable class and you know you&rsquo;re the <strong>only</strong> one using it or the <strong>owner</strong> of its lifecycle, you need to call its Dispose method to clean it up.</p></li>
<li><p>While Disposing a class and releasing its shared resources, we also want to call Finalize if our class is Finalizable. If you try to do that though, compiler gives an error message: &ldquo;Destructors and Finalize can not be called directly&rdquo;. That&rsquo;s why there is a pattern called IDisposable pattern.</p></li>
<li><p><a href="https://msdn.microsoft.com/en-us/library/system.idisposable(v=vs.110).aspx" target="_blank">MSDN documentation on IDisposable interface</a> includes a C# code sample showing how the pattern should be implemented. Notice that because Finalize can not be called directly, another Dispose method is introduced that takes a boolean argument which determines whether the class is being disposed or finalized.</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
<span class='line'>2</span>
<span class='line'>3</span>
<span class='line'>4</span>
<span class='line'>5</span>
<span class='line'>6</span>
<span class='line'>7</span>
<span class='line'>8</span>
<span class='line'>9</span>
<span class='line'>10</span>
<span class='line'>11</span>
<span class='line'>12</span>
<span class='line'>13</span>
<span class='line'>14</span>
<span class='line'>15</span>
<span class='line'>16</span>
<span class='line'>17</span>
<span class='line'>18</span>
<span class='line'>19</span>
<span class='line'>20</span>
<span class='line'>21</span>
<span class='line'>22</span>
<span class='line'>23</span>
<span class='line'>24</span>
<span class='line'>25</span>
<span class='line'>26</span>
<span class='line'>27</span>
<span class='line'>28</span>
<span class='line'>29</span>
</pre></td><td class='code' width='100%'><pre><code class='csharp'><div class='line'><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</div><div class='line'><span class="k">class</span> <span class="nc">BaseClass</span> <span class="p">:</span> <span class="n">IDisposable</span>
</div><div class='line'><span class="p">{</span>
</div><div class='line'>   <span class="c1">// Flag: Has Dispose already been called? </span>
</div><div class='line'>   <span class="kt">bool</span> <span class="n">disposed</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</div><div class='line'>   <span class="c1">// Public implementation of Dispose pattern callable by consumers. </span>
</div><div class='line'>   <span class="k">public</span> <span class="k">void</span> <span class="nf">Dispose</span><span class="p">()</span>
</div><div class='line'>   <span class="p">{</span>
</div><div class='line'>      <span class="n">Dispose</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
</div><div class='line'>      <span class="n">GC</span><span class="p">.</span><span class="n">SuppressFinalize</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</div><div class='line'>   <span class="p">}</span>
</div><div class='line'>   <span class="c1">// Protected implementation of Dispose pattern. </span>
</div><div class='line'>   <span class="k">protected</span> <span class="k">virtual</span> <span class="k">void</span> <span class="nf">Dispose</span><span class="p">(</span><span class="kt">bool</span> <span class="n">disposing</span><span class="p">)</span>
</div><div class='line'>   <span class="p">{</span>
</div><div class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">disposed</span><span class="p">)</span>
</div><div class='line'>         <span class="k">return</span><span class="p">;</span>
</div><div class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">disposing</span><span class="p">)</span> <span class="p">{</span>
</div><div class='line'>         <span class="c1">// Free any other managed objects here. </span>
</div><div class='line'>         <span class="c1">//</span>
</div><div class='line'>      <span class="p">}</span>
</div><div class='line'>      <span class="c1">// Free any unmanaged objects here. </span>
</div><div class='line'>      <span class="c1">//</span>
</div><div class='line'>      <span class="n">disposed</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</div><div class='line'>   <span class="p">}</span>
</div><div class='line'>   <span class="p">~</span><span class="n">BaseClass</span><span class="p">()</span>
</div><div class='line'>   <span class="p">{</span>
</div><div class='line'>      <span class="n">Dispose</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
</div><div class='line'>   <span class="p">}</span>
</div><div class='line'><span class="p">}</span></div></code></pre></td></tr></table></div></figure>


<ul>
<li>Let&rsquo;s look at a few important aspects of this implementation:

<ul>
<li>Class keeps track of whether it has been disposed or not and prevents being disposed more than once.</li>
<li>When a class is being Disposed, the Finalization logic also runs. So it tells the Garbage Collector not to bother Finalizing this object anymore (performance gain):</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
</pre></td><td class='code' width='100%'><pre><code class='csharp'><div class='line'><span class="n">GC</span><span class="p">.</span><span class="n">SuppressFinalize</span><span class="p">(</span><span class="k">this</span><span class="p">);</span></div></code></pre></td></tr></table></div></figure>


<ul>
<li><p>These days writing a Finalizer is fairly uncommon. Most .NET applications doesn&rsquo;t require a usage of direct pointer to an unmanaged resource. On top of that, now there is a class called <a href="https://msdn.microsoft.com/en-us/library/system.runtime.interopservices.safehandle%28v=vs.100%29.aspx" target="_blank">SafeHandle</a> which automatically wraps a pointer to an unmanaged resource. It also handles finalization for you. So this means writing a Finalizer now is very very uncommon. Check the article from Joe Duffy all the way back from 2005: <a href="http://joeduffyblog.com/2005/12/27/never-write-a-finalizer-again-well-almost-never/" target="_blank">Never write a finalizer again (well, almost never)</a></p></li>
<li><p>The whole purpose of IDisposable pattern is to accomodate Finalization and Disposition under a single solution. But because you may never ever write a finalizer again, the whole IDisposable pattern ends up being designed to cover a very very corner case. And it&rsquo;s unfortunate that nothing has changed since 2005&hellip;</p></li>
</ul>


<h2>Nicole Calinoiu&rsquo;s talk from NDC Oslo 2014</h2>

<br/>


<iframe src="http://www.hakantuncer.com//player.vimeo.com/video/97519508" width="100%" height="381" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kiwi - Updates & First demo]]></title>
    <link href="http://www.hakantuncer.com/blog/2014/12/08/kiwi-updates-and-first-demo/"/>
    <updated>2014-12-08T19:50:48+01:00</updated>
    <id>http://www.hakantuncer.com/blog/2014/12/08/kiwi-updates-and-first-demo</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been more than a month since I first wrote about Kiwi. <a href="http://www.hakantuncer.com/blog/2014/11/01/building-kiwi/">In that post</a> I had a &ldquo;demo&rdquo; section where I wrote:</p>

<blockquote><p>I was planning to create a screencast to demonstrate how Kiwi works and what it does but didn&rsquo;t get around doing it as part of this blog post. That&rsquo;s high on my to-do list. Another post will be on its way soon.</p></blockquote>

<p>In the last month a lot has happened. Therefore I had to postpone the demo for a bit longer than I thought. We even had to re-evaluate one of the most essential parts of our software after realizing that our first strategy had some weaknesses that we wouldn&rsquo;t be able to fix simply because they were outside of our control. So what do you do when a problem is outside of your control? You find another path and bypass it. At least that&rsquo;s what we did but more on that after the demo.</p>

<h2>Demo</h2>

<p>So first things first. Here is a ~6 minute demo below. Also read on if you&rsquo;re interested in the things that kept us busy in this period.</p>

<iframe width="100%" height="480" src="http://www.hakantuncer.com//www.youtube.com/embed/S1QcnZmyNpA" frameborder="0" allowfullscreen></iframe>


<h2>TripleS vs NIPO format</h2>

<p>When we started implementing Kiwi we thought that we could take TripleS files in order to determine the variables in a questionnaire. It was all good, a TripleS file indeed represents the structure of the questionnaire and the variables in it. But we also thought we could always parse the original NIPO data with it, without converting the data to the TripleS format before each data transfer.</p>

<p>It turned out that this assumption was wrong. Later we&rsquo;ve found out a few scenarios where it was simply impossible to predict the structure of the original data file by looking at the TripleS questionnaire structure alone. F.ex. questionnaires with jumps in the data positions or GOTO statements were resulting in undesired shifts in the variable references.</p>

<p>Being able to transfer data multiple times using the original NIPO data (without using any sort of conversion) is one of our design goals. This design will also enable us to completely automate this process where the user sets up the survey once and then Kiwi does the transfer continuously in the background while also displaying some sort of a dashboard to enable <strong>live visualization</strong> of the data collected during the survey.</p>

<h2>Supporting the VAR format</h2>

<p>To realise this design goal we&rsquo;ve decided to add support for VAR file format. VAR file is similar to TripleS file in the sense that they both represent the structure of a questionnaire and list all the variables in a questionnaire. But unlike the TripleS format, the VAR format doesn&rsquo;t require the data to be converted. VAR file represents the original NIPO data. That&rsquo;s exactly what we want.</p>

<p>So now when defining surveys, Kiwi accepts both TripleS and VAR file formats. If TripleS format is used the data also needs to be converted to TripleS. For a NIPO Software client I assume this will almost never be the preferred way. The most effective way will be to use the VAR file format and transfer the original data directly without any need of conversion. This is what we enabled now.</p>

<h2>Background processing infrastructure</h2>

<p>Kiwi is a web based application. Web applications are designed around quick request and responses with relatively short connection lifetimes between server and clients. However the main job of Kiwi is to process and transfer possibly very large sizes of data. This type of workload necessitates some kind of a background job processing infrastructure because it takes longer times to completely fulfill the incoming requests.</p>

<p>In Kiwi any data transfer request is represented as a background job, meaning that the user&rsquo;s request is processsed asychronously in the background while he can continue doing other things in the application. We&rsquo;re using a framework called <a href="http://hangfire.io/">Hangfire</a> that keeps track of background jobs and manages their state transitions. Hangfire also allows us to simplify the deployment of Kiwi as it hosts the background threads right inside the web application. There is no need for a separate installation.</p>

<p>We want to delight our users and make Kiwi easy and fun to use. We wanted to avoid the need of manually refreshing web pages to find out if a process has finished or not. We&rsquo;re using <a href="http://signalr.net">SignalR</a> to notify user interface about the state changes of the background processes. With this technology, users don&rsquo;t have to do anything manually. The page automatically updates itself in real time as the latest information becomes available.</p>

<h2>Performance, reliability and error handling</h2>

<p>The main difference between a toy software and a real world software is that the former is made for demos and happy path scenarios while the latter is armed with capabilities for handling various real world inputs and conditions. Even when it fails it should fail gracefully with proper and helpful error messages, preferably pointing to some documentation on how to proceed further.</p>

<p>As all developers know very well, error logging is crucial for an application&rsquo;s success. It&rsquo;s one of the most important ways to diagnose the problems that are out there in production. We&rsquo;re using <a href="https://code.google.com/p/elmah/">Elmah</a> for this purpose.</p>

<p>We&rsquo;re making extra effort to find the balance between performance and reliability. Because Kiwi will probably deal with various sizes of data from small to very large depending on the survey, it has to be able to favor reliability over performance when necessary. For those scenarios with very large input data we&rsquo;ve been working on reducing the memory footprint and trade it off with some performance. In these scenarios loading all the data to the memory is simply not acceptable.</p>

<h2>Non-technical stuff</h2>

<p>Creating a product comes with a few standard challenges.</p>

<ul>
<li>We&rsquo;re creating a company logo and a logo for Kiwi.</li>
<li>We&rsquo;ve created the first draft of our license agreement. We&rsquo;re now looking for a professional who can review it and help us finalize it.</li>
<li>Deniz is continuously enhancing the documentation. It will be hosted on <a href="https://www.zendesk.com/">Zendesk</a>. Currently it&rsquo;s a separate entity but we want to incorporate it with the software in a way that Kiwi will know how to link to this documentation based on a given context and situation. I&rsquo;m not sure if we can finish this before the first version but it&rsquo;s definitely on our list.</li>
</ul>


<p>When <a href="http://en.wikipedia.org/wiki/Pareto_principle">Pareto principle</a> is applied to software development, it reveals that the last %20 of the development takes as much time as the first %80. Sounds scary huh? : ) but it certainly has some truth in it. We&rsquo;re now very close to 100% for the first version of Kiwi. The remaining things on our todo list are non-technical, the things around actually releasing the product.</p>

<p>Before wrapping this up I would like to thank our employer <a href="http://www.niposoftware.com/">NIPO Software</a> for their great support. We&rsquo;re frequently in touch and getting a lot of feedback. Really guys&hellip; Thanks a lot!</p>

<p>I&rsquo;ll keep writing as things happen. Good and bad. Transparency is the goal here.</p>

<p>Thank you for reading and as usual: feel free to drop a comment.</p>

<p>Hakan</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building Kiwi]]></title>
    <link href="http://www.hakantuncer.com/blog/2014/11/01/building-kiwi/"/>
    <updated>2014-11-01T10:27:02+01:00</updated>
    <id>http://www.hakantuncer.com/blog/2014/11/01/building-kiwi</id>
    <content type="html"><![CDATA[<p>I think it was sometime around February 2014 when Deniz Orsel, my colleague from <a href="http://www.niposoftware.com/" target="_blank">NIPO Software</a>, came to me and said &ldquo;I need you to build something&hellip;&rdquo;. Later it became apparent that he also already had discussed his idea with <a href="https://twitter.com/serifozcan" target="_blank">Serif Ozcan</a>, another colleague of mine in <a href="http://www.niposoftware.com/" target="_blank">NIPO Software</a> and convinced him.</p>

<p>&ldquo;Our customers are frequently asking for a tool like this yet it doesn&rsquo;t really fall under the category of &lsquo;Data collection&rsquo; that&rsquo;s why NIPO Software does not invest in this&rdquo; he said. As he explained, I realized it was a good opportunity and also a win &ndash; win situation for us and NIPO Software. I was convinced.</p>

<p>Startup life, starting a business and creating something valuable for people have always been interesting to me. I&rsquo;ve been developing software for almost 10 years now (wow time flies&hellip;) and I really enjoy doing it. But software by itself does not mean anything. It only finds its meaning in a context where it touches human lives.</p>

<p>Switching between these two worlds: &ldquo;mechanics of software&rdquo; and &ldquo;the context it touches and changes people&rsquo;s lives&rdquo; gives more meaning to what I do and how I work. Starting a business around software and creating products demands this frequent switching and even many more skills related to different disciplines like marketing, sales, legal and trading rules in the country one operates.</p>

<p>Even if we end up making no money or even wasting money, I knew we could learn a lot from this experience as a whole and that&rsquo;s what really matters to me and my friends.</p>

<h2>Ok fine but what is Kiwi?</h2>

<p><img src="http://www.hakantuncer.com/assets/Building_Kiwi/Kiwi_Highlights.png" alt="Kiwi Highlights" /></p>

<p>Not everyone reading this blog is working in the area of market research let alone even familiar with the technical market research terminology. So instead of a single long technical definition I&rsquo;ll try to list some facts about Kiwi:</p>

<ul>
<li>Kiwi is a web based application that can be hosted in the cloud or in customer premises.</li>
<li>Kiwi takes collected data that is either in NIPO or Triple-S format and transfers it to a SQL database in relational format and makes analysis &amp; monitoring a lot easier. Apart from the data itself, Kiwi will also create the questionnaire structure in the target SQL database as a reference.</li>
<li>Kiwi can transfer closed and open data files. It also allows consecutive transfers where it will continue adding to the existing data set in SQL without changing it.</li>
<li>For these reasons Kiwi can be used by any market research company that is utilizing data collection platforms built by NIPO Software or any other platform that supports Triple-S standard.</li>
</ul>


<h2>Demo</h2>

<p>I was planning to create a screencast to demonstrate how Kiwi works and what it does but didn&rsquo;t get around doing it as part of this blog post. That&rsquo;s high on my to-do list. Another post will be on its way soon.</p>

<h2>Going forward</h2>

<p>We&rsquo;re software developers and technologists. Our biggest strength is our technical side. The first version of Kiwi is more or less completed. We&rsquo;re still in the process of making it more robust and user friendly. We&rsquo;re also preparing a strong documentation. Deploying and using Kiwi should be a piece of cake. As well as troubleshooting it.</p>

<p>On the other hand we&rsquo;re totally newbies in a few other areas. We still need to:</p>

<ul>
<li><em>Start a company here in the Netherlands</em>. There are many things we need to figure out around taxation and legal aspects of starting a company and selling a product. It&rsquo;s currently a work in progress.</li>
<li><em>Figure out a pricing strategy</em>. We&rsquo;ve been discussing about this for a while but haven&rsquo;t come to a final decision yet. We&rsquo;re also gathering ideas from friends in NIPO Software.  It turns out that pricing is a much bigger concept than just simply putting a price tag on a product. It involves a bit more than that. Things get especially complicated around the topic of customer support.</li>
<li><em>Create a site for the product and decide on some kind of a payment methodology</em>. The company we&rsquo;re going to start will need a website. The product also needs a site of its own. When Kiwi becomes commercially available there will also be a payment system in place.</li>
</ul>


<p>Still a bunch of things to do. We&rsquo;ve been making steady progress but we&rsquo;re not in a hurry. Going at our own pace. Current target is to release Kiwi no later than 15th of January. No idea what happens next but one thing is clear: it will be adventurous.</p>

<p>Thanks for reading and if you have any comments please don&rsquo;t hesitate to add them below.</p>

<p>Hakan</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing around with Redis & SignalR]]></title>
    <link href="http://www.hakantuncer.com/blog/2014/10/26/playing-around-with-redis-and-signalr-part-1/"/>
    <updated>2014-10-26T19:32:27+01:00</updated>
    <id>http://www.hakantuncer.com/blog/2014/10/26/playing-around-with-redis-and-signalr-part-1</id>
    <content type="html"><![CDATA[<p>A good friend of mine contacted me a couple of weeks ago and asked if I would accept a freelancing project. Around research and prototyping. Possibly leading to a new architecture for their existing product. The existing architecture didn&rsquo;t allow any further room for the new requirements they had &ndash; he told me during our skype conversation. I thought it was fun and took the offer. R&amp;D and freelancing.. not bad huh!</p>

<p>So as part of the assignment I&rsquo;ve been doing some interesting reasearch and prototyping so why not blog about it as well I thought.</p>

<h2>Going technical:</h2>

<p>One of the requirements is to decouple the system components so that they can be deployed and run on different boxes. So a typical &ldquo;scaling out&rdquo; problem.</p>

<p>The other requirement is to enable these components to talk to each other about the changes happening through-out the system. So these components have to be able to send/receive messages to/from each other. This is especially important after separating these components obviously.</p>

<p>After studying the existing architecture and reading through some code, this was my initial design. I&rsquo;ve changed the application names to something more generic to keep it confidential but the technical idea behind it is still the same:</p>

<p><img src="http://www.hakantuncer.com/assets/Playing_Around_With_Redis/SystemArchitectureDiagram.png" alt="System Architecture Diagram" /></p>

<p>Let&rsquo;s look at some of the key components:</p>

<ul>
<li><strong>App Server</strong>: The application server is running a mission critical service that needs to be very fast. It is actually orchestrating incoming and outgoing voice calls, can&rsquo;t afford to be slow. Obviously there is also some bookkeeping that the application server does. The states of the calls and users change over time and this kind of application state information is also interesting to the other parts of the system for various reasons like monitoring, dashboards or some other type of actions that needs to be taken.</li>
<li><strong>Web UI</strong>: This is basically where customers will sign in and manage their system and data. They can do administrative work as well as look at various dashboards to see what is going on. This is going to become a self-hosted (yes OWIN) MVC 5 application.</li>
<li><strong>Web API</strong>: Most things that can be done with the Web UI should be done with API as well. So that customers can be creative and build their own solutions &amp; extensions. This will be built with Web API 2.0 and self hosted.</li>
</ul>


<p>I will tell more about the other components in the future posts. But careful readers should have already noticed that some of the requirements beg for a &ldquo;message broker&rdquo; / &ldquo;service bus&rdquo; type of a system in between to coordinate messaging.
Let&rsquo;s talk a bit about <a href="http://redis.io/" target="_blank">Redis</a> now.</p>

<h2>Redis:</h2>

<p>Here is the official definiton of Redis:</p>

<blockquote><p>Redis is an open source, BSD licensed, advanced key-value cache and store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets, sorted sets, bitmaps and hyperloglogs.</p></blockquote>

<p>At <a href="http://www.niposoftware.com/" target="_blank">NIPO Software</a> we&rsquo;ve been using Redis for a while but frankly I didn&rsquo;t know that Redis was also supporting pub/sub messaging. As a solution the first thing that came to my mind was <a href="http://www.rabbitmq.com/" target="_blank">RabbitMQ</a>, which is a message broker. But Redis can do other interesting things as well. So I focused on Redis instead.</p>

<p>Here is what Wikipedia says about the &ldquo;Publish–subscribe pattern&rdquo;:</p>

<blockquote><p>In software architecture, publish–subscribe is a messaging pattern where senders of messages, called publishers, do not program the messages to be sent directly to specific receivers, called subscribers. Instead, published messages are characterized into classes, without knowledge of what, if any, subscribers there may be. Similarly, subscribers express interest in one or more classes, and only receive messages that are of interest, without knowledge of what, if any, publishers there are.</p></blockquote>

<p>And what Redis adds to it:</p>

<blockquote><p>This decoupling of publishers and subscribers can allow for greater scalability and a more dynamic network topology.</p></blockquote>

<p>Redis is also a cache store and a persistent storage. If you tell Redis to do so, it will take occasional snapshots of the data in it&rsquo;s memory and persist it to disk. As you progress through the Redis documentation it feels like Redis is all you need : ) F.ex here is where Redis snapshotting feature is configured:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
<span class='line'>2</span>
<span class='line'>3</span>
<span class='line'>4</span>
<span class='line'>5</span>
<span class='line'>6</span>
<span class='line'>7</span>
<span class='line'>8</span>
<span class='line'>9</span>
<span class='line'>10</span>
<span class='line'>11</span>
<span class='line'>12</span>
<span class='line'>13</span>
<span class='line'>14</span>
<span class='line'>15</span>
<span class='line'>16</span>
<span class='line'>17</span>
<span class='line'>18</span>
<span class='line'>19</span>
<span class='line'>20</span>
<span class='line'>21</span>
<span class='line'>22</span>
<span class='line'>23</span>
<span class='line'>24</span>
</pre></td><td class='code' width='100%'><pre><code class='bash'><div class='line'><span class="c">################################ SNAPSHOTTING  #################################</span>
</div><div class='line'><span class="c">#</span>
</div><div class='line'><span class="c"># Save the DB on disk:</span>
</div><div class='line'><span class="c">#</span>
</div><div class='line'><span class="c">#   save &lt;seconds&gt; &lt;changes&gt;</span>
</div><div class='line'><span class="c">#</span>
</div><div class='line'><span class="c">#   Will save the DB if both the given number of seconds and the given</span>
</div><div class='line'><span class="c">#   number of write operations against the DB occurred.</span>
</div><div class='line'><span class="c">#</span>
</div><div class='line'><span class="c">#   In the example below the behaviour will be to save:</span>
</div><div class='line'><span class="c">#   after 900 sec (15 min) if at least 1 key changed</span>
</div><div class='line'><span class="c">#   after 300 sec (5 min) if at least 10 keys changed</span>
</div><div class='line'><span class="c">#   after 60 sec if at least 10000 keys changed</span>
</div><div class='line'><span class="c">#</span>
</div><div class='line'><span class="c">#   Note: you can disable saving at all commenting all the &quot;save&quot; lines.</span>
</div><div class='line'><span class="c">#</span>
</div><div class='line'><span class="c">#   It is also possible to remove all the previously configured save</span>
</div><div class='line'><span class="c">#   points by adding a save directive with a single empty string argument</span>
</div><div class='line'><span class="c">#   like in the following example:</span>
</div><div class='line'><span class="c">#</span>
</div><div class='line'><span class="c">#   save &quot;&quot;</span>
</div><div class='line'><span class="c">#save 900 1</span>
</div><div class='line'><span class="c">#save 300 10</span>
</div><div class='line'><span class="c">#save 60 10000</span></div></code></pre></td></tr></table></div></figure>


<p>Depending on how critical your data is you can specify different levels of aggressiveness. As with everything the more aggressively you save the more stress you put on the system. On the other hand you can disable saving completely which will make Redis a purely caching server.</p>

<p>If you want to quickly get up and running with Redis I recommend the <a href="http://www.pluralsight.com/courses/building-nosql-apps-redis" target="_blank">Pluralsight course from John Sonmez</a>. It does a great job on getting you from zero to sixty.</p>

<h2>Redis on Windows</h2>

<p>Redis is an open source project and only supports Linux. But Microsoft Open Tech group develops and supports a <a href="https://github.com/MSOpenTech/redis" target="_blank">Windows port targeting Win64</a>. On the other hand I haven&rsquo;t seen a single source that recommends running Redis Windows in production even though Microsoft claims that it&rsquo;s heavily tested and production ready. General sentiment is like &ldquo;why would you do that when you can just run it on a Linux VM&rdquo; which I can understand for SAAS scenarios.</p>

<p>For the project that I&rsquo;m working on there is also installation scenarios on customer premises so asking them to get a Linux machine is a bit over the top my friend says. So we&rsquo;re willing to give the Microsoft Redis a chance. Hey these guys are also running <a href="http://azure.microsoft.com/en-us/services/cache/" target="_blank">Redis on Azure</a> after all&hellip;</p>

<p><a href="https://servicestack.net/" target="_blank">ServiceStack</a> is one of the frameworks that put focus on Redis. Supporting Redis is one of their selling points:</p>

<p><img src="http://www.hakantuncer.com/assets/Playing_Around_With_Redis/ServiceStack.png" alt="ServiceStack products" /></p>

<p>ServiceStack also distributes <a href="https://github.com/ServiceStack/redis-windows" target="_blank">MS Open Tech Redis port of Windows on GitHub</a>. If you want to run the Windows version of Redis there are very useful information here on how to install Redis Windows as a service or how to use <a href="http://docs-v1.vagrantup.com/v1/docs/getting-started/index.html" target="_blank">Vagrant</a> to install the Linux version of Redis on a Windows box with virtualization through <a href="https://www.virtualbox.org/" target="_blank">VirtualBox</a>.</p>

<h2>Redis C# Clients</h2>

<p>There are <a href="http://redis.io/clients" target="_blank">a bunch of clients</a> out there implemented for Redis with various languages. As of this writing this is how the list looks like for C#. The ones that are starred are the recommended clients by Redis.</p>

<p><img src="http://www.hakantuncer.com/assets/Playing_Around_With_Redis/RedisCSharpClients.png" alt="Redis C# Clients" /></p>

<p>I&rsquo;ve picked the ServiceStack client over StackExchange because of the richer and nicer to use library. It looks like the StackExchange client is claiming to be the fastest though.</p>

<p>Right after starting to use the latest ServiceStack Redis client I&rsquo;ve noticed that they&rsquo;ve switched to a commercial license with version 4. But <a href="https://github.com/ServiceStackV3/ServiceStackV3" target="_blank">the previous version 3</a> continues to be BSD license. So I fell back to this version after finding that out. Version 3 is also a pretty complete library and for my current purposes it doesn&rsquo;t really matter.</p>

<p>Here is how the API looks like (click <a href="http://mono.servicestack.net/img/Redis-annotated.png" target="_blank">here</a> for a version that you can zoom):</p>

<p><img src="http://www.hakantuncer.com/assets/Playing_Around_With_Redis/Redis-annotated.png" alt="Redis Client API Overview" /></p>

<h2>A User Scenario</h2>

<p>One of the scenarios that can be implemented with this prototype is as follows (remember the architecture diagram from the beginning of this post):</p>

<ul>
<li>When a user adds a record to the system through the Web UI (management site) the App Server needs to know about that record without going to the database.</li>
<li>When something interesting happens on the App Server the Web UI needs to be notified and then it should refresh the information on the connected clients&#8217; browsers. A typical dashboard scenario which should not require manual page refresh.</li>
</ul>


<p>Thanks for reading.</p>

<p>Hakan</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[After NDC Oslo 2014]]></title>
    <link href="http://www.hakantuncer.com/blog/2014/06/08/after-ndc-oslo-2014/"/>
    <updated>2014-06-08T15:39:52+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2014/06/08/after-ndc-oslo-2014</id>
    <content type="html"><![CDATA[<p>It&rsquo;s over. I&rsquo;m back in Amsterdam after an awesome week in Oslo. Great sessions, lots of smart people, delicious food and very good coffee. Inspirations everywhere.</p>

<p>I didn&rsquo;t know Norwegians were this much into coffee drinking. I can easily say that I didn&rsquo;t drink a single cup of bad coffee in Oslo in 7 days. One of the world&rsquo;s best coffee shop <a href="https://timwendelboe.no/">Tim Wendelboe</a> is also located in Oslo. But more on that later.</p>

<p>I&rsquo;ve seen a lot of stuff and spent time with very smart people.</p>

<p>Like I did with my previous conference visit in Microsoft / Seattle, I&rsquo;ll write down all the sessions I&rsquo;ve attended, together with the links to the video recordings.</p>

<p>I didn&rsquo;t know the sessions in NDC were recorded. That was a bit of a nice surprise in the beginning of the conference. Deciding which sessions to attended became a lot easier afterwards. Now I can basically see anything I missed if I want.</p>

<h2>Workshops</h2>

<p>Attending the workshops was the best decision we&rsquo;ve made. By far the most educative part of the conference. 2 days of workshop gives enough time to properly dive into a broad topic, allows a good deal of Q/A and lab time.</p>

<p>The workshop I attended was titled as &ldquo;Identity and Access Control for modern web applications and API&rsquo;s&rdquo;. From <a href="https://twitter.com/leastprivilege">Dominick Baier</a> and <a href="https://twitter.com/BrockLAllen">Brock Allen</a>. 10 out of 10 for those guys. They were well prepared. They were also very responsive to the questions from the attendees.</p>

<p>Unfortunately there is no video recording here. I have pdf&rsquo;s and lab solutions which I&rsquo;ll share in a next blog post.</p>

<p>We&rsquo;ve covered everything from the old security techniques to the modern ones. Here are some of the main points:</p>

<ul>
<li>Using security tokens and claims based authentication &amp; authorization is the way to go in to the future.</li>
<li>Separating authentication to another shared service is a good technique once you have multiple services in your deployment. This security service will issue access tokens for other services in the system to consume. This avoids repetition of security related code in every other service in the system. Enables DRY. Single point of configuration and control. Good stuff.</li>
<li>Microsoft is already moving in this direction with <a href="http://owin.org/">OWIN</a> and <a href="http://www.asp.net/aspnet/overview/owin-and-katana/an-overview-of-project-katana">Katana</a>. Claims based identity is baked into the framework at the moment. And there are a number of Katana middlewares that implement token based authentication.</li>
</ul>


<p>I&rsquo;ve left the workshop with some ideas and improvements that can be applied to <a href="http://nfieldmr.com/get-started.aspx" target="_blank">Nfield</a>. Ideas that can enable securer access scenarios and can make security implementation more elegant.</p>

<h2>Keynote</h2>

<br>


<ul>
<li><a href="http://vimeo.com/97305189" target="_blank">It’s a Write/Read (Mobile) Web</a></li>
</ul>


<p>If you&rsquo;re doing anything remotely related to UI or UX design you have to see this keynote. Period.</p>

<p>More and more companies are realizing that the intuitiveness and ease of use of their applications are very critical to their competitive advantage. How many taps or clicks does it take to achieve something in your mobile application? Think again. It&rsquo;s a matter of people using or quiting it.</p>

<p>Luke Wroblewski will blow your mind with the statistics and examples he puts up on the screen.</p>

<h2>Sessions &ndash; 4 June 2014</h2>

<br>


<ul>
<li><p><a href="http://vimeo.com/97315938" target="_blank">Immutability, State and Scale &ndash; Functional, Distributed Applications in Azure</a></p></li>
<li><p><a href="http://vimeo.com/97318800" target="_blank">Banish Your Inner Critic</a></p></li>
</ul>


<p>I&rsquo;d read a couple of essays written by <a href="https://twitter.com/denisejacobs">Denise Jacobs</a> about creativity and productivity. I wanted to attend one of her sessions. She explains how to stop (or ignore) your inner critic that tries its best to scare you from failure and to kill your creativity.</p>

<ul>
<li><p><a href="http://vimeo.com/97329157" target="_blank">Seven Ineffective Coding Habits of Many Programmers</a></p></li>
<li><p><a href="http://vimeo.com/97337304" target="_blank">Async C# 5.0 &ndash; Patters For Real World Use</a></p></li>
<li><p><a href="http://vimeo.com/97344528" target="_blank">Builders versus breakers – 10 online attacks we could have easily prevented</a></p></li>
</ul>


<p><a href="https://twitter.com/troyhunt">Troy Hunt</a>&rsquo;s talks are like exciting science fiction movies. You don&rsquo;t want it to end, but time flies quickly. The title of the talk is self explanatory. It&rsquo;s about a bunch of very interesting online attacks happened in history and most destructive ones have happened in the last 2 years. Maybe this is a sign for what&rsquo;s about to come in the future. Data theft at its best.</p>

<br>


<ul>
<li><a href="http://vimeo.com/97349267" target="_blank">Managing Asynchronicity</a></li>
</ul>


<p>One doesn&rsquo;t get to see <a href="http://en.wikipedia.org/wiki/Douglas_Crockford">Douglas Crockford</a> in person everyday. Functional programming and asynchronicity are two hot topics of the new era. Crockford talks about what asynchronicity is, its effects to our programs and how we can best test these async scenarios using a testing tool called <a href="http://www.jscheck.org">JSCheck</a>.</p>

<h2>Sessions &ndash; 5 June 2014</h2>

<br>


<ul>
<li><a href="http://vimeo.com/97408202" target="_blank">Javascript Combinators</a></li>
</ul>


<p>I&rsquo;m finding Javascript combinators very interesting. Javascript has <a href="http://en.wikipedia.org/wiki/First-class_function">first class functions</a> meaning that a lot of interesting things can be done with them. Once you start combining and decorating functions with other functions, very interesting ways of expressing programs start to appear.</p>

<p>Surprisingly programs become DSL-like and more readable because instead of &ldquo;HOW&rdquo; the program syntax starts to tell &ldquo;WHAT&rdquo;. Making it more declarative than imperative.</p>

<p>I really loved this session and the way <a href="https://twitter.com/raganwald">Reginald Braithwaite</a> presented it. I&rsquo;m hoping to find time to read his book <a href="http://www.amazon.com/Javascript-Allong%C3%A9-Reginald-Braithwaite-ebook/dp/B00FLKRCVO">JavaScript Allonge</a>.</p>

<ul>
<li><p><a href="http://vimeo.com/97415351" target="_blank">An Actor&rsquo;s Life for Me – An introduction to the TPL Dataflow Library and asynchronous programming blocks</a></p></li>
<li><p><a href="http://vimeo.com/97419151" target="_blank">Zone out, check in, move on</a></p></li>
</ul>


<p>As programmers our &ldquo;flow&rdquo; is something sacred to us. When we&rsquo;re concentrated and in flow we must not be interrupted because it annoys us and costs us too much time to get back into flow again.</p>

<p><a href="https://twitter.com/ploeh">Mark Seemann</a> thinks interruptions are going to happen no matter what. Instead of trying to avoid them he focuses on ways of working that will allow him to get back into flow easier and much faster.</p>

<p>I&rsquo;ve come across a nice <a href="http://gallarotti.github.io/digitalian/commentary/how-to-minimize-distractions-recovery-time/">summary blog post</a> about this session.</p>

<br>


<ul>
<li><a href="http://vimeo.com/97473703" target="_blank">GitHub Power Tools</a></li>
</ul>


<p>This is a useful hands-on session on using GitHub. It&rsquo;s not focused on Git but more about what you can do with GitHub itself. GitHub is more than only Git and has many features for letting developers collaborate on open source projects effectively.</p>

<ul>
<li><p><a href="http://vimeo.com/97501414" target="_blank">Node.JS Tools For Front-End Developers</a></p></li>
<li><p><a href="http://vimeo.com/97505678" target="_blank">The Future of ASP.NET Part II</a></p></li>
<li><p><a href="http://vimeo.com/97507560" target="_blank">From Code Monkey to Boss Man</a></p></li>
<li><p><a href="http://vimeo.com/97454683" target="_blank">Fun with JavaScript</a></p></li>
</ul>


<h2>Sessions &ndash; 6 June 2014</h2>

<br>


<ul>
<li><a href="http://vimeo.com/84676527" target="_blank">Functional Programming: What? Why? When?</a></li>
</ul>


<p>Just like with Douglas Crockford, you don&rsquo;t leave a conference without attending a session given by <a href="https://twitter.com/unclebobmartin">Bob Martin</a>. This is one of those talks with some &ldquo;aha&rdquo; moments about functional programming.</p>

<p>One thing that I found really interesting is a book that Uncle Bob mentions during his talk. The book is called <a href="http://mitpress.mit.edu/sicp/full-text/book/book.html">Structure and Interpretation of Computer Programs</a> which he praised a lot. At some point during his talk he said something along the lines of the following:</p>

<blockquote><p>..almost near the end of the book the authors wrote a couple of pages worth apologies on what&rsquo;s about to come, and then they introduced the assignment statement..</p></blockquote>

<p>This amazed me. They could write almost the whole book without the assignment statement (read as pure functional) and then they introduced it like as if it was a defect in software programs. Funny.</p>

<ul>
<li><p><a href="http://vimeo.com/97516214" target="_blank">Data Modeling Examples in the Real World with MongoDB</a></p></li>
<li><p><a href="http://vimeo.com/97519532" target="_blank">Transforming your C# code to functional style</a></p></li>
</ul>


<p>One of the most effective and indulging sessions I&rsquo;ve attended in this conference. I highly recommend everybody to see it. Don&rsquo;t expect complex code examples. <a href="https://twitter.com/venkat_s">Venkat Subramaniam</a> uses simple examples to make his point. Just listen to what he has to say about functional programming, he&rsquo;ll open up your mind.</p>

<br>


<ul>
<li><a href="http://vimeo.com/97530814" target="_blank">How I hacked my way to Norway</a></li>
</ul>


<p>Another Troy Hunt show off session. He talks about a couple of highly effective web attacks. Watch it if you&rsquo;re looking for fun, but basically it all comes down to a couple of main points:</p>

<ol>
<li><p>Never ever display a login form on an HTTP connection. Even if you&rsquo;re posting that form to an HTTPS endpoint. A man in the middle can change the form to somewhere else and steal your credentials without you knowing it. Turns out that Iranian government used this technique to steal its citizens&#8217; Facebook credentials for a while before Facebook woke up and made their login page HTTPS only.</p></li>
<li><p>Always be careful with SQL injection. If you&rsquo;re using latest frameworks you&rsquo;re mostly covered.</p></li>
<li><p>Make sure your username &amp; password challenge is computationally costly and time-consuming. If an attacker gets a hold of your user database and decides to convert them to clean text, he should be slowed down. It turns out that simple hashing and salting algorithms are easy to break with rainbow table attacks. Even the ASP.NET Membership implementation from 2010.</p></li>
</ol>


<br>


<ul>
<li><p><a href="http://vimeo.com/97537675" target="_blank">Towards an Evolutionary Architecture</a></p></li>
<li><p><a href="http://vimeo.com/97541185" target="_blank">Core Software Design Principles</a></p></li>
</ul>


<p>This is what I want to share right now. Maybe I can dive into a number of these topics in some of my next blog posts. Thanks for reading.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NDC Oslo 2014]]></title>
    <link href="http://www.hakantuncer.com/blog/2014/05/13/ndc-oslo-2014/"/>
    <updated>2014-05-13T22:24:08+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2014/05/13/ndc-oslo-2014</id>
    <content type="html"><![CDATA[<p>Yes! It&rsquo;s happening. We will be at <a href="http://www.ndcoslo.com/" target="_blank">NDC Oslo 2014</a> with 3 developers from <a href="http://www.niposoftware.com/" target="_blank">NIPO Software</a>. <a href="https://twitter.com/bjorn_coltof" target="_blank">Bjorn Coltof</a>, <a href="https://twitter.com/serifozcan" target="_blank">Serif Ozcan</a> and I are going to be there between 2-6th of June. We&rsquo;ll be attending the conference as well as the pre-conference workshops. We&rsquo;re all pretty excited and it&rsquo;s going to be awesome. Connect with us if you&rsquo;re also going to be there! We can have a chat over a beer or two. All beers are on NIPO Software! (just testing if Jeroen Noordman, our CEO, is reading this post. I should soon find out).</p>

<p>Let&rsquo;s get to the conference content. The sessions are so great that you wish you could have mitosis and attend at least a couple of them at the same time. But again life is all about priorities. Clarifying the priorities is tough.</p>

<p>My thought process involved asking myself these questions:</p>

<ul>
<li>Am I particularly interested in the main subject of this session? (Doh!)</li>
<li>Is this session content something I can find in books, online documents or Pluralsight courses? How original is it?</li>
<li>..and of course it&rsquo;s preferable that I can apply this knowledge somewhere in the office like on <a href="http://nfieldmr.com/get-started.aspx" target="_blank">Nfield</a>.</li>
</ul>


<p>There is a bunch of <a href="http://www.ndcoslo.com/pre-conference-workshops" target="_blank">pre-conference workshops</a> that will take place in the first 2 days, right before the conference starts. First choice had to be made here. This is something you can&rsquo;t change afterwards. It&rsquo;s printed on the ticket.</p>

<p>In the end Bjorn and I picked <a href="http://www.ndcoslo.com/pre-conference-workshop/identity-workshop/1750" target="_blank">Identity and access control for modern web applications and APIs (Dominick Baier &ndash; Brock Allen)</a> and Serif chose to stay away from us by enrolling in <a href="http://www.ndcoslo.com/pre-conference-workshop/angularjs-workshop/1865" target="_blank">AngularJS workshop (Scott Allen)</a>. Can&rsquo;t really blame him, I love Scott Allen&rsquo;s <a href="http://pluralsight.com/training/Authors/Details/scott-allen" target="_blank">Pluralsight courses.</a></p>

<p>The most tricky part in this selection is that all &ldquo;interesting&rdquo; single day workshops are set for 3rd of June. So it becomes very hard to pick two separate single day workshops. This also goes as a feedback to NDC organizers. Don&rsquo;t do that again!</p>

<p>After we hack enough code during these 2 day workshops the actual conference will start. Here are screenshots from the agenda together with my selections based on priority. I&rsquo;ve color coded the talks on the calender:</p>

<br>


<ul>
<li><span style="color:red">Highest priority.</span></li>
<li><span style="color:orange">Middle priority. Go to this one if you can&rsquo;t somehow make the one above.</span></li>
<li><span style="color:green">Low priority. Go to this one if you can&rsquo;t make neither of above.</span></li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/NDCOslo2014/NDCOslo_Wednesday.png" alt="NDC Oslo Wednesday Sessions" /></p>

<br>


<hr>


<p><img src="http://www.hakantuncer.com/assets/NDCOslo2014/NDCOslo_Thursday.png" alt="NDC Oslo Thursday Sessions" /></p>

<br>


<hr>


<p><img src="http://www.hakantuncer.com/assets/NDCOslo2014/NDCOslo_Friday.png" alt="NDC Oslo Friday Sessions" /></p>

<p>This is obviously A LOT OF new stuff. Here is the list of technologies I should get myself familiar with to avoid showing up clueless in the sessions:</p>

<p><img src="http://www.hakantuncer.com/assets/NDCOslo2014/NDCOslo_LearningList.png" alt="NDC Oslo Learning List" /></p>

<p>That&rsquo;s it for now. Probably more posts will follow during and after the conference.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disaster Recovery on Azure]]></title>
    <link href="http://www.hakantuncer.com/blog/2014/04/27/disaster-recovery-on-azure/"/>
    <updated>2014-04-27T19:30:37+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2014/04/27/disaster-recovery-on-azure</id>
    <content type="html"><![CDATA[<br/><br/>


<blockquote><h4>UPDATE:</h4>

<p>Things keep changing &amp; improving really FAST on Azure. This post may not reflect the latest capabilities in terms of Disaster Recovery for Azure Applications. Make sure to read the subject on <a href="https://msdn.microsoft.com/en-us/library/azure/dn251004.aspx">MSDN</a> as well.</p></blockquote>

<p>There are things we tend to ignore. Things that we don&rsquo;t want to spend time on or think about because there are no immediate benefits. Disaster recovery is one of those topics. The chances are fairly low, but the impact on our business is catastrophic. The consequences can go as far as losing the business completely. Unless there is some sort of a disaster recovery plan in place.</p>

<p>Because I&rsquo;m working with Microsoft Azure on a daily basis as part of my job, I&rsquo;ll be focusing on Azure but the fundamental principles and concepts should be universal for every cloud platform, or even for on premises type scenarios.</p>

<h2>Two key objectives</h2>

<br>


<blockquote><h5>Recovery Time Objective (RTO)</h5>

<p>Recovery Time Objective is the maximum amount of time allocated for restoring application functionality.</p></blockquote>

<p>This is usually a requirement coming from the business. Basically the question is how critical is your platform and how much down time can you tolerate in such a catastrophic event?</p>

<blockquote><h5>Recovery Point Objective (RPO)</h5>

<p>The recovery point objective (RPO) is the acceptable time window of lost data due to the recovery process.</p></blockquote>

<p>For example, if the RPO is one hour, you must completely back up or replicate the data at least every hour. Once you bring up the application in an alternate datacenter, the backup data may be missing up to an hour of data. Like RTO, critical applications target a much smaller RPO.</p>

<p>These two key objectives determine the approach that needs to be followed and therefore the effort and cost of the whole disaster recovery plan.</p>

<p>The purpose of this blog post is not to describe solutions for each possible combination of these two objectives, but to describe a couple of approaches that can tolerate relatively long recovery time objective (~24 hours) with a more aggressive (so short) recovery point objective.</p>

<p>Don&rsquo;t forget that having a short RTO and RPO together can be both costly and complex to implement depending on the storage needs of your applications.</p>

<h2>Running business on a single datacenter</h2>

<p>Let&rsquo;s say you haven&rsquo;t thought on a disaster recovery plan yet. If your software is deployed on a single datacenter and making use of Azure Storage and/or Azure SQL Database you are at risk of losing your business should your datacenter goes dark due to a disaster or a catastrophic failure.</p>

<p>An Azure datacenter is equipped with fault domains and redundancy to keep your service highly available but these are all inside the datacenter. If the whole datacenter goes down all the compute instances, databases and storage services will go down with it.</p>

<p><img src="http://www.hakantuncer.com/assets/Disaster_Recovery_On_Azure/Single_Region_Deployment.png" width="500" height="438" title="'Single Region Deployment'" ></p>

<p>Assuming that you still have your software in-house somewhere, there should be no risk of losing the compute instances forever. By creating and deploying the cloud packages on another datacenter the compute instances can be recovered. <strong>The key to business continuity is to be able to recover the data that is stored on Azure Storage and Azure SQL Databases.</strong></p>

<h2>Frequently backup data outside the datacenter</h2>

<p>Whatever the recovery objectives are, backing up application data outside of the datacenter is a must for business continuity. How frequently the data is backed up or synced outside the datacenter will determine the recovery point objective.</p>

<p>When there are backups available outside the datacenter, the environment can be moved to another datacenter by restoring the data and installing compute instances using existing cloud service packages.</p>

<p><img src="http://www.hakantuncer.com/assets/Disaster_Recovery_On_Azure/Redeploy_Azure_Datacenter.png" alt="Redeploy to another datacenter" /></p>

<p>This is called &ldquo;redeploy&rdquo; recovery model and as you might already guess has a long recovery time objective. All the individual pieces of the environment needs to be moved to another datacenter and redeployed.</p>

<h2>How to backup Azure data (together with RPO and RTO considerations)</h2>

<br><br>


<h4>1. Azure Storage</h4>

<p>The good news is that Azure Storage Service has built-in replication strategies. Two of them are geographical redundancy, meaning that all storage data is replicated across datacenters. That&rsquo;s exactly what disaster recovery is about.</p>

<p><img src="http://www.hakantuncer.com/assets/Disaster_Recovery_On_Azure/Azure_Storage_Redundancy.png" alt="Azure Storage Geo Redundancy" /></p>

<p>The difference between &ldquo;Geo Redundant&rdquo; and &ldquo;Read-Access Geo Redundant&rdquo; is that the latter allows the redundant data to be accessed at all times in a read-only fashion. This brings us to another important point:</p>

<blockquote><p>Here is what Microsoft&rsquo;s documentation say about the estimated azure storage failover time in case of a disaster:  &ldquo;estimated time that the data will be accessible to customers after a disaster is 24 hours.&rdquo;</p></blockquote>

<p>In the light of these information 3 options appear for backing up the Azure Storage:</p>

<ul>
<li><strong>Geo-Redundancy</strong>: There is no SLA but RPO is practically very short. RTO is long. Only after about 24 hours the failover process will be completed by Microsoft and the data will be available again.</li>
<li><strong>Read-Access Geo Redundant</strong>: RPO is again the same as above. However almost immediately the redundant data can be accessed (read-only) which allows systems to run in a degraded mode (if they&rsquo;re designed in such a fault tolerant way of course). Then again in 24 hours everything will be fully operational.</li>
<li><strong>Custom</strong>: If RTO needs to be shorter, the only option is to look for a third party product that can replicate an azure storage to another datacenter. This redundant storage will always be available in Read/Write mode (since it&rsquo;s just another regular storage account, only in another geographical region).</li>
</ul>


<br>


<h4>2. Azure SQL Databases</h4>

<p>Yesterday I woke up to an <a href="http://view.email.microsoftemail.com/?j=fe9016787161057a71&amp;m=fe621570756503797d1c&amp;ls=fe1817787c60027e711d79&amp;l=fec21c767365017e&amp;s=fe2212717465037a701d78&amp;jb=ff5e177873&amp;ju=fe5711777060017b7611">annoucement from Microsoft</a> introducing new types of databases in Azure with new disaster recovery features:</p>

<p><img src="http://www.hakantuncer.com/assets/Disaster_Recovery_On_Azure/DisasterRecoveryPerDatabaseType.png" alt="Disaster Recovery Per Database Type" /></p>

<p>Let&rsquo;s look at each option and see what it means:</p>

<ul>
<li><strong>Restore to an alternate Azure region</strong>: This phrase means &ldquo;no silver bullet&rdquo;. Basic type database owners are responsible with their own backup and restore operations. Luckily there is a convenient way to backup and restore an Azure SQL Database regardless of its type.</li>
</ul>


<br>


<h5>Automatic Database Export:</h5>

<p>Actually there are a couple of ways to replicate or backup a database. But most of these options have their own shortcomings for disaster recovery. There is a feature called <a href="http://msdn.microsoft.com/en-US/library/azure/ff951624.aspx">Database Copy</a> which creates a <a href="http://technet.microsoft.com/en-us/library/ms151176.aspx">transactionally consistent replica</a> of the source database in <strong>the same datacenter.</strong> Because the replica resides in the same datacenter there is no geo-redundancy. But after the copying is completed, this database can be exported to a storage account in another datacenter.</p>

<p>This is exactly what <strong>Automatic Database Export</strong> feature does. It first replicates the database with a copy operation, thus getting a transactionally consistent copy of the database, then exports it to the storage account that is configured. To see how it is configured you can visit <a href="http://blogs.msdn.com/b/sql-bi-sap-cloud-crm_all_in_one_place/archive/2013/07/24/sql-azure-automated-database-export.aspx">this blog post</a>.</p>

<p>A direct manual export operation itself does not generate a transactionally consistent copy of a database. This means you may end up having an Order item in the database with a missing OrderDetails. Automatic Database Export however takes care of this problem. The documentation was not very clear on that so I asked the man himself:</p>

<br>




<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/hakant">@hakant</a> <a href="https://twitter.com/Azure">@Azure</a> yes I&#39;m pretty sure it is</p>&mdash; Scott Guthrie (@scottgu) <a href="https://twitter.com/scottgu/statuses/460180886915276801">April 26, 2014</a></blockquote>


<script async src="http://www.hakantuncer.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>So we&rsquo;re on the right track here.</p>

<br>


<blockquote><p><strong>Attention:</strong> First part of Automatic Database Export is the replication of the database with Database COPY operation which runs two databases at the same time. This means export operations are partially doubling the database costs.</p></blockquote>

<p>So far so good&hellip; But what determines RTO and RPO for Automatic Database Export? This analysis depends on the frequency and the destination storage configured for the database export operation.</p>

<br>


<ul>
<li><em>Exporting to a separate storage account on another datacenter:</em></li>
</ul>


<p>In this scenario, the RPO will simply be around [Database Export Frequency]. If the database is exported every 6 hours, in the worst case scenario 6 hours of data may be lost.</p>

<p>RTO is simply the [Database Restore Duration]. No need to wait for Microsoft to execute the Azure Storage failover process. The database export file is immediately available on the storage account in the other datacenter.</p>

<br>


<ul>
<li><em>Exporting to the primary storage account on the same datacenter:</em></li>
</ul>


<p>In this scenario, we&rsquo;re relying on the Automated Azure Storage Geo-Replication to get the exported database transferred to another datacenter. Since this scenario uses the geo-replication feature of the storage account there won&rsquo;t be any additional costs for geo-reduntant storage. This is nice indeed.</p>

<p>But in the worst case scenario the RPO can go as far as [2 * Database Export Frequency] if the datacenter happens to fail during the geo-replication process. In that case, the last export file won&rsquo;t be available after the failure but only the one before that will be.</p>

<p>On the other hand, the RTO is [Estimated Azure Storage Geo-Failover Time + Database Restore Duration]. Again, Microsoft&rsquo;s estimation for Azure Storage geo-failover is around 24 hours.</p>

<p>So the moral of the story is that having a dedicated separate Azure Storage account on the other datacenter is beneficial for both RPO and RTO. But as usual the downside is financial. The separate storage account is also billed separately. Both for storage and bandwith to transfer the data. Though it&rsquo;s also worth mentioning that Azure Storage is <a href="http://azure.microsoft.com/en-us/pricing/details/storage/">fairly cheap</a>.</p>

<p>Now let&rsquo;s move to the other disaster recovery features.</p>

<ul>
<li><p><strong>Geo-Replication Passive Replica</strong>: Unfortunately there is no documentation available for this mysterious feature yet. Frankly there is no single mention of this feature anywhere else at the time of this writing. So the technique described above for the Basic databases also applies here until Microsoft actually ships this feature or shares more about it. I&rsquo;ll update this section when that happens.</p></li>
<li><p><strong>Active Geo-Replication</strong>: This one is a silver bullet solution. Unfortunately only the Premium database owners can make use of this feature. With Active Geo-Replication, you can create and maintain up to four readable secondary databases across geographic regions. Basically this gives a very short RPO and RTO for the price of running multiple Premium databases (<a href="http://azure.microsoft.com/en-us/pricing/details/sql-database/#basic-standard-and-premium">which is quite a lot</a>). You can read more about <a href="http://msdn.microsoft.com/en-US/library/azure/dn741339.aspx">Active Geo-Replication on MSDN</a>.</p></li>
</ul>


<h2>Final thoughts</h2>

<p>If your business can tolerate larger than ~24 hrs recovery time objective (RTO) Azure provides a couple of inexpensive features that you can already start making use of. These features also require very little effort to setup and you guarantee business continuity in case of a catastrophic event.</p>

<p>The most cost effective strategy is the following:</p>

<ol>
<li>Make sure your storage account is configured for Geo-Redundancy (default).</li>
<li>Turn on Automatic Database Export and configure a high frequency that makes sense. Keep track of how long this operation takes and adjust your frequency based on that as well.</li>
<li>Set your default azure storage account as the destination of automatic database export. So rely on the geo-redundancy of your storage account.</li>
</ol>


<p>If you need a shorter RTO build up on this strategy. This post is mainly focused on &ldquo;Redeploy&rdquo; pattern. There are other patterns available on MSDN and some are focused on more aggressive RTO&rsquo;s. I recommend reading: <a href="http://msdn.microsoft.com/en-us/library/dn251004.aspx">Disaster Recovery and High Availability for Azure Applications</a>.</p>

<h2>References</h2>

<p>Most information on this blog post is obtained from the following MSDN pages. Some others are direct observations &amp; usage from Azure Management Portal.</p>

<ul>
<li><a href="http://msdn.microsoft.com/en-us/library/dn251004.aspx">Disaster Recovery and High Availability for Azure Applications</a></li>
<li><a href="http://msdn.microsoft.com/library/azure/hh852669.aspx">Azure SQL Database Business Continuity</a></li>
<li><a href="http://msdn.microsoft.com/en-US/library/azure/ff951624.aspx">Copying Databases in Azure SQL Database</a></li>
<li><a href="http://msdn.microsoft.com/en-US/library/azure/hh335292.aspx">How to: Import and Export a Database (Azure SQL Database)</a></li>
<li><a href="http://blogs.msdn.com/b/windowsazure/archive/2014/04/04/sql-database-updates-coming-soon-to-the-premium-preview.aspx">SQL Database updates coming soon to the Premium preview</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A simple Nfield.SDK app]]></title>
    <link href="http://www.hakantuncer.com/blog/2014/04/15/a-simple-nfield-dot-sdk-app/"/>
    <updated>2014-04-15T20:14:15+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2014/04/15/a-simple-nfield-dot-sdk-app</id>
    <content type="html"><![CDATA[<p>In a previous blog post I covered the step by step process of <a href="http://www.hakantuncer.com/blog/2014/04/13/publishing-nfield-dot-sdk-to-nuget/">publishing Nfield.SDK to NuGet</a>.</p>

<p>After publishing Nfield.SDK, a natural follow up is to create a simple app that installs Nfield.SDK through NuGet and does something useful with it.</p>

<blockquote><p>To learn more about Nfield or to <a href="http://nfieldmr.com/get-started.aspx" target="_blank">get started</a> visit <a href="http://nfieldmr.com/" target="_blank">nfieldmr.com</a></p></blockquote>

<h2>Installing Nfield.SDK in a Console Application</h2>

<p>What is better than a windows console application to prove that it&rsquo;s really easy to install and use Nfield.SDK. Let&rsquo;s fire up Visual Studio, create a Console Application and install Nfield.SDK through NuGet.</p>

<p>Opening the package manager for my console app and typing nfield in the search box brings me the Nfield.SDK NuGet package:</p>

<p><img src="http://www.hakantuncer.com/assets/A_Simple_NfieldSDK_App/NfieldSDK_Online_InNuget.png" alt="Nfield SDK Online in Nuget" /></p>

<p>After clicking install, I see that Nfield.SDK is automatically installed and referenced from my project.</p>

<p><img src="http://www.hakantuncer.com/assets/A_Simple_NfieldSDK_App/NfieldSDK_In_My_Project.png" alt="Nfield SDK Installed In My Project" /></p>

<p>Wait a moment&hellip; I only installed Nfield.SDK but now I see that &ldquo;Json.NET&rdquo;, &ldquo;Microsoft ASP.NET Web API Client Libraries&rdquo; and &ldquo;Microsoft .NET Framework 4 HTTP Client Libraries&rdquo; also got installed. As discussed in the <a href="http://www.hakantuncer.com/blog/2014/04/13/publishing-nfield-dot-sdk-to-nuget/">previos blog post</a> NuGet is smart enough to recursively install packages and all of their dependencies.</p>

<p>In this case Nfield.SDK has a direct dependency to &ldquo;Microsoft ASP.NET Web API Client&rdquo;:</p>

<p><img src="http://www.hakantuncer.com/assets/A_Simple_NfieldSDK_App/Nfield.SDK_Dependencies.png" alt="Nfield SDK Dependencies on NuGet" /></p>

<p>And &ldquo;Microsoft ASP.NET Web API Client&rdquo; has direct dependency to the rest:</p>

<p><img src="http://www.hakantuncer.com/assets/A_Simple_NfieldSDK_App/WebApiClient_Dependencies.png" alt="WebApi Client Dependencies on NuGet" /></p>

<p>The point here is that NuGet took care of all the dependencies of my application in one click of an install button.</p>

<h2>Getting ready for coding</h2>

<p>Focusing back to the console application, I&rsquo;m going to create an app that is going to add an interviewer to my domain on Nfield. In order to do that, I need one more ingredient to take care of: an <a href="http://en.wikipedia.org/wiki/Inversion_of_control">Inversion of Control Container</a>.</p>

<p>Nfield.SDK implementation is a little opinionated about the usage of an IoC Container together with it. It won&rsquo;t dictate you which one to use that&rsquo;s why it has an initializer that accepts some key registration methods:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
<span class='line'>2</span>
<span class='line'>3</span>
<span class='line'>4</span>
<span class='line'>5</span>
<span class='line'>6</span>
<span class='line'>7</span>
<span class='line'>8</span>
<span class='line'>9</span>
<span class='line'>10</span>
</pre></td><td class='code' width='100%'><pre><code class='csharp'><div class='line'>   <span class="c1">/// &lt;summary&gt;</span>
</div><div class='line'>    <span class="c1">/// Method that registers all known types by calling the delegates provided.</span>
</div><div class='line'>    <span class="c1">/// This method must be called before using the SDK.</span>
</div><div class='line'>    <span class="c1">/// &lt;/summary&gt;</span>
</div><div class='line'>    <span class="c1">/// &lt;param name=&quot;registerTransient&quot;&gt;Method that registers a Transient type.&lt;/param&gt;</span>
</div><div class='line'>    <span class="c1">/// &lt;param name=&quot;registerSingleton&quot;&gt;Method that registers a Singleton.&lt;/param&gt;</span>
</div><div class='line'>    <span class="c1">/// &lt;param name=&quot;registerInstance&quot;&gt;Method that registers an instance.&lt;/param&gt;</span>
</div><div class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">Initialize</span><span class="p">(</span><span class="n">Action</span><span class="p">&lt;</span><span class="n">Type</span><span class="p">,</span> <span class="n">Type</span><span class="p">&gt;</span> <span class="n">registerTransient</span><span class="p">,</span>
</div><div class='line'>                                  <span class="n">Action</span><span class="p">&lt;</span><span class="n">Type</span><span class="p">,</span> <span class="n">Type</span><span class="p">&gt;</span> <span class="n">registerSingleton</span><span class="p">,</span>
</div><div class='line'>                                  <span class="n">Action</span><span class="p">&lt;</span><span class="n">Type</span><span class="p">,</span> <span class="n">Object</span><span class="p">&gt;</span> <span class="n">registerInstance</span><span class="p">)</span></div></code></pre></td></tr></table></div></figure>


<br>


<blockquote><p>If you don&rsquo;t know what an IoC Container is there is nothing to worry about. If you just copy the short setup code that I&rsquo;m going to share in a second you&rsquo;re ready to use Nfield.SDK. You don&rsquo;t have to use IoC for your application logic. Again, if you&rsquo;re new to IoC Containers I recommend reading <a href="http://martinfowler.com/articles/injection.html">this paper from Martin Fowler</a>.</p></blockquote>

<p>An IoC container that we frequently use at NIPO Software is <a href="http://www.ninject.org/">Ninject</a>. I&rsquo;ll install it to my project using NuGet again (only the top one in the list below is sufficient).</p>

<p><img src="http://www.hakantuncer.com/assets/A_Simple_NfieldSDK_App/AddingNinjectToMyApp.png" alt="Adding Ninject To My App" /></p>

<h2>Nfield.SDK in action</h2>

<p>Good. Now I&rsquo;m ready to write my actual business logic. Signing into my Nfield domain and creating an interviewer. Here is how the code looks like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
<span class='line'>2</span>
<span class='line'>3</span>
<span class='line'>4</span>
<span class='line'>5</span>
<span class='line'>6</span>
<span class='line'>7</span>
<span class='line'>8</span>
<span class='line'>9</span>
<span class='line'>10</span>
<span class='line'>11</span>
<span class='line'>12</span>
<span class='line'>13</span>
<span class='line'>14</span>
<span class='line'>15</span>
<span class='line'>16</span>
<span class='line'>17</span>
<span class='line'>18</span>
<span class='line'>19</span>
<span class='line'>20</span>
<span class='line'>21</span>
<span class='line'>22</span>
<span class='line'>23</span>
<span class='line'>24</span>
<span class='line'>25</span>
<span class='line'>26</span>
<span class='line'>27</span>
<span class='line'>28</span>
<span class='line'>29</span>
<span class='line'>30</span>
<span class='line'>31</span>
<span class='line'>32</span>
<span class='line'>33</span>
<span class='line'>34</span>
<span class='line'>35</span>
<span class='line'>36</span>
<span class='line'>37</span>
<span class='line'>38</span>
<span class='line'>39</span>
<span class='line'>40</span>
<span class='line'>41</span>
<span class='line'>42</span>
<span class='line'>43</span>
</pre></td><td class='code' width='100%'><pre><code class='csharp'><div class='line'><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</div><div class='line'><span class="k">using</span> <span class="nn">Nfield.Infrastructure</span><span class="p">;</span>
</div><div class='line'><span class="k">using</span> <span class="nn">Nfield.Models</span><span class="p">;</span>
</div><div class='line'><span class="k">using</span> <span class="nn">Nfield.Services</span><span class="p">;</span>
</div><div class='line'><span class="k">using</span> <span class="nn">Ninject</span><span class="p">;</span>
</div><div class='line'><span class="k">namespace</span> <span class="nn">TestNfieldApp</span>
</div><div class='line'><span class="p">{</span>
</div><div class='line'>    <span class="k">class</span> <span class="nc">Program</span>
</div><div class='line'>    <span class="p">{</span>
</div><div class='line'>        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</div><div class='line'>        <span class="p">{</span>
</div><div class='line'>            <span class="k">using</span> <span class="p">(</span><span class="n">IKernel</span> <span class="n">kernel</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StandardKernel</span><span class="p">())</span>
</div><div class='line'>            <span class="p">{</span>
</div><div class='line'>                <span class="n">InitializeNfield</span><span class="p">(</span><span class="n">kernel</span><span class="p">);</span>
</div><div class='line'>                <span class="k">const</span> <span class="kt">string</span> <span class="n">serverUrl</span> <span class="p">=</span> <span class="s">&quot;https://api.nfieldbeta.com/v1&quot;</span><span class="p">;</span>
</div><div class='line'>                <span class="c1">// First step is to get an INfieldConnection which provides services used for data access and manipulation. </span>
</div><div class='line'>                <span class="kt">var</span> <span class="n">connection</span> <span class="p">=</span> <span class="n">NfieldConnectionFactory</span><span class="p">.</span><span class="n">Create</span><span class="p">(</span><span class="k">new</span> <span class="n">Uri</span><span class="p">(</span><span class="n">serverUrl</span><span class="p">));</span>
</div><div class='line'>                <span class="c1">// User must sign in to the Nfield server with the appropriate credentials prior to using any of the services.</span>
</div><div class='line'>                <span class="n">connection</span><span class="p">.</span><span class="n">SignInAsync</span><span class="p">(</span><span class="s">&quot;H&quot;</span><span class="p">,</span> <span class="s">&quot;DA&quot;</span><span class="p">,</span> <span class="s">&quot;******&quot;</span><span class="p">).</span><span class="n">Wait</span><span class="p">();</span>
</div><div class='line'>                <span class="kt">var</span> <span class="n">interviewersService</span> <span class="p">=</span> <span class="n">connection</span><span class="p">.</span><span class="n">GetService</span><span class="p">&lt;</span><span class="n">INfieldInterviewersService</span><span class="p">&gt;();</span>
</div><div class='line'>                <span class="n">interviewersService</span><span class="p">.</span><span class="n">AddAsync</span><span class="p">(</span><span class="k">new</span> <span class="n">Interviewer</span>
</div><div class='line'>                <span class="p">{</span>
</div><div class='line'>                    <span class="n">ClientInterviewerId</span> <span class="p">=</span> <span class="s">&quot;hakantun&quot;</span><span class="p">,</span>
</div><div class='line'>                    <span class="n">UserName</span> <span class="p">=</span> <span class="s">&quot;hakant&quot;</span><span class="p">,</span>
</div><div class='line'>                    <span class="n">FirstName</span> <span class="p">=</span> <span class="s">&quot;Hakan&quot;</span><span class="p">,</span>
</div><div class='line'>                    <span class="n">LastName</span> <span class="p">=</span> <span class="s">&quot;Tuncer&quot;</span><span class="p">,</span>
</div><div class='line'>                    <span class="n">EmailAddress</span> <span class="p">=</span> <span class="s">&quot;h.tuncer@niposoftware.com&quot;</span><span class="p">,</span>
</div><div class='line'>                    <span class="n">Password</span> <span class="p">=</span> <span class="s">&quot;hakan12&quot;</span>
</div><div class='line'>                <span class="p">}).</span><span class="n">Wait</span><span class="p">();</span>
</div><div class='line'>            <span class="p">}</span>
</div><div class='line'>        <span class="p">}</span>
</div><div class='line'>        <span class="c1">/// &lt;summary&gt;</span>
</div><div class='line'>        <span class="c1">/// Example of initializing the SDK with Ninject as the IoC container.</span>
</div><div class='line'>        <span class="c1">/// &lt;/summary&gt;</span>
</div><div class='line'>        <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">InitializeNfield</span><span class="p">(</span><span class="n">IKernel</span> <span class="n">kernel</span><span class="p">)</span>
</div><div class='line'>        <span class="p">{</span>
</div><div class='line'>            <span class="n">DependencyResolver</span><span class="p">.</span><span class="n">Register</span><span class="p">(</span><span class="n">type</span> <span class="p">=&gt;</span> <span class="n">kernel</span><span class="p">.</span><span class="n">Get</span><span class="p">(</span><span class="n">type</span><span class="p">),</span> <span class="n">type</span> <span class="p">=&gt;</span> <span class="n">kernel</span><span class="p">.</span><span class="n">GetAll</span><span class="p">(</span><span class="n">type</span><span class="p">));</span>
</div><div class='line'>            <span class="n">NfieldSdkInitializer</span><span class="p">.</span><span class="n">Initialize</span><span class="p">((</span><span class="n">bind</span><span class="p">,</span> <span class="n">resolve</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="n">kernel</span><span class="p">.</span><span class="n">Bind</span><span class="p">(</span><span class="n">bind</span><span class="p">).</span><span class="n">To</span><span class="p">(</span><span class="n">resolve</span><span class="p">).</span><span class="n">InTransientScope</span><span class="p">(),</span>
</div><div class='line'>                                            <span class="p">(</span><span class="n">bind</span><span class="p">,</span> <span class="n">resolve</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="n">kernel</span><span class="p">.</span><span class="n">Bind</span><span class="p">(</span><span class="n">bind</span><span class="p">).</span><span class="n">To</span><span class="p">(</span><span class="n">resolve</span><span class="p">).</span><span class="n">InSingletonScope</span><span class="p">(),</span>
</div><div class='line'>                                            <span class="p">(</span><span class="n">bind</span><span class="p">,</span> <span class="n">resolve</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="n">kernel</span><span class="p">.</span><span class="n">Bind</span><span class="p">(</span><span class="n">bind</span><span class="p">).</span><span class="n">ToConstant</span><span class="p">(</span><span class="n">resolve</span><span class="p">));</span>
</div><div class='line'>        <span class="p">}</span>
</div><div class='line'>    <span class="p">}</span>
</div><div class='line'><span class="p">}</span></div></code></pre></td></tr></table></div></figure>


<p>After I run this application and go to the interviewers page of my domain, I see that the inverviewer I just added is now listed there. Below is a screenshot from the beta version of <a href="https://manager.nfieldbeta.com/">Nfield Management Interface</a> (authentication required).</p>

<p><img src="http://www.hakantuncer.com/assets/A_Simple_NfieldSDK_App/InterviewerAdded_Success.png" alt="Interviewer Added Successfuly" /></p>

<p>The code I used gets a reference to INfieldInterviewersService and adds an interviewer using this interface.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
<span class='line'>2</span>
<span class='line'>3</span>
<span class='line'>4</span>
<span class='line'>5</span>
<span class='line'>6</span>
<span class='line'>7</span>
<span class='line'>8</span>
<span class='line'>9</span>
<span class='line'>10</span>
</pre></td><td class='code' width='100%'><pre><code class='csharp'><div class='line'><span class="kt">var</span> <span class="n">interviewersService</span> <span class="p">=</span> <span class="n">connection</span><span class="p">.</span><span class="n">GetService</span><span class="p">&lt;</span><span class="n">INfieldInterviewersService</span><span class="p">&gt;();</span>
</div><div class='line'><span class="n">interviewersService</span><span class="p">.</span><span class="n">AddAsync</span><span class="p">(</span><span class="k">new</span> <span class="n">Interviewer</span>
</div><div class='line'><span class="p">{</span>
</div><div class='line'>    <span class="n">ClientInterviewerId</span> <span class="p">=</span> <span class="s">&quot;hakantun&quot;</span><span class="p">,</span>
</div><div class='line'>    <span class="n">UserName</span> <span class="p">=</span> <span class="s">&quot;hakant&quot;</span><span class="p">,</span>
</div><div class='line'>    <span class="n">FirstName</span> <span class="p">=</span> <span class="s">&quot;Hakan&quot;</span><span class="p">,</span>
</div><div class='line'>    <span class="n">LastName</span> <span class="p">=</span> <span class="s">&quot;Tuncer&quot;</span><span class="p">,</span>
</div><div class='line'>    <span class="n">EmailAddress</span> <span class="p">=</span> <span class="s">&quot;h.tuncer@niposoftware.com&quot;</span><span class="p">,</span>
</div><div class='line'>    <span class="n">Password</span> <span class="p">=</span> <span class="s">&quot;hakan12&quot;</span>
</div><div class='line'><span class="p">}).</span><span class="n">Wait</span><span class="p">();</span></div></code></pre></td></tr></table></div></figure>


<p>Nfield.SDK has many service interfaces that allow clients to control various aspects of their research projects.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
<span class='line'>2</span>
<span class='line'>3</span>
<span class='line'>4</span>
<span class='line'>5</span>
<span class='line'>6</span>
<span class='line'>7</span>
<span class='line'>8</span>
<span class='line'>9</span>
<span class='line'>10</span>
<span class='line'>11</span>
<span class='line'>12</span>
<span class='line'>13</span>
<span class='line'>14</span>
<span class='line'>15</span>
<span class='line'>16</span>
<span class='line'>17</span>
<span class='line'>18</span>
<span class='line'>19</span>
<span class='line'>20</span>
</pre></td><td class='code' width='100%'><pre><code class='csharp'><div class='line'><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">Initialize</span><span class="p">(</span><span class="n">Action</span><span class="p">&lt;</span><span class="n">Type</span><span class="p">,</span> <span class="n">Type</span><span class="p">&gt;</span> <span class="n">registerTransient</span><span class="p">,</span>
</div><div class='line'>                                      <span class="n">Action</span><span class="p">&lt;</span><span class="n">Type</span><span class="p">,</span> <span class="n">Type</span><span class="p">&gt;</span> <span class="n">registerSingleton</span><span class="p">,</span>
</div><div class='line'>                                      <span class="n">Action</span><span class="p">&lt;</span><span class="n">Type</span><span class="p">,</span> <span class="n">Object</span><span class="p">&gt;</span> <span class="n">registerInstance</span><span class="p">)</span>
</div><div class='line'><span class="p">{</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">NfieldConnection</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldConnection</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldInterviewersService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldInterviewersService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldSurveysService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldSurveysService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldSurveyDataService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldSurveyDataService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldBackgroundTasksService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldBackgroundTasksService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldSurveyScriptService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldSurveyScriptService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldFieldworkOfficesService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldFieldworkOfficesService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldMediaFilesService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldMediaFilesService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldLanguagesService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldLanguagesService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldTranslationsService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldTranslationsService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldSurveySettingsService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldSurveySettingsService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldSurveyResponseCodesService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldSurveyResponseCodesService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldAddressesService</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldAddressesService</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">INfieldHttpClient</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">NfieldHttpClient</span><span class="p">));</span>
</div><div class='line'>    <span class="n">registerTransient</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">IFileSystem</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">FileSystem</span><span class="p">));</span>
</div><div class='line'><span class="p">}</span></div></code></pre></td></tr></table></div></figure>


<p>I think that&rsquo;s a post. I hope I could shed some light on getting up and running with Nfield.SDK and the various things that you can do with it.</p>

<p>Thanks for reading.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Publishing Nfield.SDK to NuGet]]></title>
    <link href="http://www.hakantuncer.com/blog/2014/04/13/publishing-nfield-dot-sdk-to-nuget/"/>
    <updated>2014-04-13T18:34:32+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2014/04/13/publishing-nfield-dot-sdk-to-nuget</id>
    <content type="html"><![CDATA[<p>A couple of days ago I published Nfield.SDK to NuGet. In this blog post I want to describe the steps that are involved. Obviously this process will equally apply to publishing / consuming any other software library or package using NuGet.</p>

<h2>What is Nfield SDK</h2>

<p>Me and my colleagues at <a href="http://www.niposoftware.com/">NIPO Software</a> are building the next generation data collection platform called <a href="http://www.nfieldmr.com/">Nfield</a>. Nfield has an <a href="https://github.com/NIPOSoftware/Nfield-SDK">open source SDK</a> that market research offices can use to streamline and automate setting up their research projects.</p>

<h2>NuGet and Package Management Systems</h2>

<p>If you&rsquo;re a .NET developer or familiar with Microsoft development environment you probably know what Nuget is. Nuget is an open source package manager for Microsoft development platform (including .NET). Package management systems make poor developers&#8217; lives rock (well almost). It eases everything about installing libraries and managing dependencies. It also opens up lots of automation possibilities &ndash; like integrating dependency management into the build process. The home of nuget is <a href="http://www.nuget.org">www.nuget.org</a>.</p>

<p>Most platforms have their own package management systems. Ruby has <a href="https://rubygems.org">RubyGems</a>, Node.js has <a href="https://www.npmjs.org">npm</a>, Apache has <a href="http://maven.apache.org">Maven</a> and it works with multiple platforms but it&rsquo;s primarily used by the Java community. Package managers don&rsquo;t only exist in the context of software development. There are also system-wide package managers to install components and applications for operating systems. For more information check out <a href="http://en.wikipedia.org/wiki/Package_management_system">Package Management System</a> and <a href="http://en.wikipedia.org/wiki/List_of_software_package_management_systems">List of Package Management Systems</a> on Wikipedia.</p>

<h2>Step by step &ndash; Publishing Nfield.SDK to NuGet</h2>

<br><br>


<h3>1. Cloning Nfield.SDK from GitHub</h3>

<p>When it comes to Git I have a couple of ways to interact. I either directly use the Git commands from a shell or <a href="https://windows.github.com/">GitHub for Windows</a> and lately I&rsquo;m also very happy with the Git integration of Visual Studio 2013. In this case I&rsquo;ll just go ahead and use GitHub for Windows to clone Nfield.SDK to my local repository.</p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/NfieldSDK_GitHub_For_Windows.png" alt="Cloning Nfield SDK" /></p>

<p>After cloning is finished, now all files are on my local repository.</p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/NfieldSDK_Folder.png" alt="Nfield SDK Folder" /></p>

<br>


<h3>2. Creating a .nuspec file for Nfield.SDK project</h3>

<p>.nuspec files are XML manifests which describe nuget packages. A .nuspec manifest is used to build a nuget package and it&rsquo;s also stored inside the package after the package is created. There is a <a href="http://docs.nuget.org/docs/reference/nuspec-reference">.nuspec reference</a> in nuget.org.</p>

<p>So whenever we want to create a nuget package, we first need to create a .nuspec file. Nuget.exe command line utility allows us to create .nuspec files from .csproj files. You can also create a blank .nuspec file but pointing to an existing .csproj file makes things a lot easier since it&rsquo;s automatically detecting some of the metadata for us.</p>

<figure class='code'><figcaption><span>run this command on the directory where the .csproj file is located</span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
</pre></td><td class='code' width='100%'><pre><code class='bash'><div class='line'>nuget spec</div></code></pre></td></tr></table></div></figure>


<p>After running this nuget command NField.SDK.nuspec file is created for us under the same directory.</p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/nuspec_file.png" alt="Nfield SDK nuspec file" /></p>

<p>Let&rsquo;s look at the .nuspec file that is generated:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
<span class='line'>2</span>
<span class='line'>3</span>
<span class='line'>4</span>
<span class='line'>5</span>
<span class='line'>6</span>
<span class='line'>7</span>
<span class='line'>8</span>
<span class='line'>9</span>
<span class='line'>10</span>
<span class='line'>11</span>
<span class='line'>12</span>
<span class='line'>13</span>
<span class='line'>14</span>
<span class='line'>15</span>
<span class='line'>16</span>
<span class='line'>17</span>
<span class='line'>18</span>
</pre></td><td class='code' width='100%'><pre><code class='xml'><div class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</div><div class='line'><span class="nt">&lt;package</span> <span class="nt">&gt;</span>
</div><div class='line'>  <span class="nt">&lt;metadata&gt;</span>
</div><div class='line'>    <span class="nt">&lt;id&gt;</span>$id$<span class="nt">&lt;/id&gt;</span>
</div><div class='line'>    <span class="nt">&lt;version&gt;</span>$version$<span class="nt">&lt;/version&gt;</span>
</div><div class='line'>    <span class="nt">&lt;title&gt;</span>$title$<span class="nt">&lt;/title&gt;</span>
</div><div class='line'>    <span class="nt">&lt;authors&gt;</span>$author$<span class="nt">&lt;/authors&gt;</span>
</div><div class='line'>    <span class="nt">&lt;owners&gt;</span>$author$<span class="nt">&lt;/owners&gt;</span>
</div><div class='line'>    <span class="nt">&lt;licenseUrl&gt;</span>http://LICENSE_URL_HERE_OR_DELETE_THIS_LINE<span class="nt">&lt;/licenseUrl&gt;</span>
</div><div class='line'>    <span class="nt">&lt;projectUrl&gt;</span>http://PROJECT_URL_HERE_OR_DELETE_THIS_LINE<span class="nt">&lt;/projectUrl&gt;</span>
</div><div class='line'>    <span class="nt">&lt;iconUrl&gt;</span>http://ICON_URL_HERE_OR_DELETE_THIS_LINE<span class="nt">&lt;/iconUrl&gt;</span>
</div><div class='line'>    <span class="nt">&lt;requireLicenseAcceptance&gt;</span>false<span class="nt">&lt;/requireLicenseAcceptance&gt;</span>
</div><div class='line'>    <span class="nt">&lt;description&gt;</span>$description$<span class="nt">&lt;/description&gt;</span>
</div><div class='line'>    <span class="nt">&lt;releaseNotes&gt;</span>Summary of changes made in this release of the package.<span class="nt">&lt;/releaseNotes&gt;</span>
</div><div class='line'>    <span class="nt">&lt;copyright&gt;</span>Copyright 2014<span class="nt">&lt;/copyright&gt;</span>
</div><div class='line'>    <span class="nt">&lt;tags&gt;</span>Tag1 Tag2<span class="nt">&lt;/tags&gt;</span>
</div><div class='line'>  <span class="nt">&lt;/metadata&gt;</span>
</div><div class='line'><span class="nt">&lt;/package&gt;</span></div></code></pre></td></tr></table></div></figure>


<p>First thing you&rsquo;ll notice is the variable names that start and end with a $ sign. In the next step, when we generate the actual package, the package generator will be told to grab these metadata from the assembly information.</p>

<p>Here is how the assembly information of Nfield.SDK looks like:</p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/Nfield.SDK_AssemblyInfo.png" alt="Nfield SDK Assembly info" /></p>

<p>Other fields which don&rsquo;t contain variable names need to be filled in before generating the package. Here is the .nuspec file after I edited all these fields:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
<span class='line'>2</span>
<span class='line'>3</span>
<span class='line'>4</span>
<span class='line'>5</span>
<span class='line'>6</span>
<span class='line'>7</span>
<span class='line'>8</span>
<span class='line'>9</span>
<span class='line'>10</span>
<span class='line'>11</span>
<span class='line'>12</span>
<span class='line'>13</span>
<span class='line'>14</span>
<span class='line'>15</span>
<span class='line'>16</span>
<span class='line'>17</span>
<span class='line'>18</span>
</pre></td><td class='code' width='100%'><pre><code class='xml'><div class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</div><div class='line'><span class="nt">&lt;package</span> <span class="nt">&gt;</span>
</div><div class='line'>  <span class="nt">&lt;metadata&gt;</span>
</div><div class='line'>    <span class="nt">&lt;id&gt;</span>$id$<span class="nt">&lt;/id&gt;</span>
</div><div class='line'>    <span class="nt">&lt;version&gt;</span>$version$<span class="nt">&lt;/version&gt;</span>
</div><div class='line'>    <span class="nt">&lt;title&gt;</span>$title$<span class="nt">&lt;/title&gt;</span>
</div><div class='line'>    <span class="nt">&lt;authors&gt;</span>$author$<span class="nt">&lt;/authors&gt;</span>
</div><div class='line'>    <span class="nt">&lt;owners&gt;</span>$author$<span class="nt">&lt;/owners&gt;</span>
</div><div class='line'>    <span class="nt">&lt;licenseUrl&gt;</span>http://www.gnu.org/licenses<span class="nt">&lt;/licenseUrl&gt;</span>
</div><div class='line'>    <span class="nt">&lt;projectUrl&gt;</span>https://github.com/NIPOSoftware/Nfield-SDK<span class="nt">&lt;/projectUrl&gt;</span>
</div><div class='line'>    <span class="nt">&lt;iconUrl&gt;&lt;/iconUrl&gt;</span>
</div><div class='line'>    <span class="nt">&lt;requireLicenseAcceptance&gt;</span>false<span class="nt">&lt;/requireLicenseAcceptance&gt;</span>
</div><div class='line'>    <span class="nt">&lt;description&gt;</span>$description$<span class="nt">&lt;/description&gt;</span>
</div><div class='line'>    <span class="nt">&lt;releaseNotes&gt;&lt;/releaseNotes&gt;</span>
</div><div class='line'>    <span class="nt">&lt;copyright&gt;</span>Copyright © NIPO Software 2013<span class="nt">&lt;/copyright&gt;</span>
</div><div class='line'>    <span class="nt">&lt;tags&gt;</span>nfield marketresearch capi cawi<span class="nt">&lt;/tags&gt;</span>
</div><div class='line'>  <span class="nt">&lt;/metadata&gt;</span>
</div><div class='line'><span class="nt">&lt;/package&gt;</span></div></code></pre></td></tr></table></div></figure>


<br>


<h3>3. Creating the actual nuget package (.nupkg) for Nfield.SDK</h3>

<br>




<figure class='code'><figcaption><span>executing the nuget package command for Nfield.SDK in release mode</span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
</pre></td><td class='code' width='100%'><pre><code class='bash'><div class='line'>nuget pack Nfield.SDK.csproj -Prop <span class="nv">Configuration</span><span class="o">=</span>Release</div></code></pre></td></tr></table></div></figure>


<p>Notice that &ldquo;nuget pack&rdquo; command is not executed on the .nuspec file but on the .csproj file. But according to the nuget documentation this command picks up both the .nuspec file and the .csproj file from the directory. After executing the pack command here is what I got:</p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/Icon_URL_CanNotBeEmpty.png" alt="Nfield SDK - Icon Url Can't be empty" /></p>

<p>For a moment, I thought ignoring the iconUrl entry in the .nuspec file would not be a big deal but I was wrong.</p>

<p>This is what <a href="">.nuspec reference</a> says about the iconUrl:</p>

<blockquote><p>A URL for the image to use as the icon for the package in the Manage NuGet Packages dialog box. This should be a 32x32-pixel .png file that has a transparent background.</p></blockquote>

<p>I immediately headed to <a href="http://nfieldmr.com/">http://nfieldmr.com/</a> to steal an nfield icon and indeed I found one. I shrinked the size to 32x32 and then committed it to the root of Nfield.SDK github repository.. hoping to be able to get a public URL for it afterwards. And voila! check the image below. Clicking the &ldquo;Raw&rdquo; button gives me this URL for my new icon: <a href="https://raw.githubusercontent.com/NIPOSoftware/Nfield-SDK/development/icon-nfield.png">https://raw.githubusercontent.com/NIPOSoftware/Nfield-SDK/development/icon-nfield.png</a></p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/nfield-icon-on-github.png" alt="Nfield icon on github" /></p>

<p>So after putting the icon URL into the .nuspec file here is what I have.. the final version of the .nuspec file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
<span class='line'>2</span>
<span class='line'>3</span>
<span class='line'>4</span>
<span class='line'>5</span>
<span class='line'>6</span>
<span class='line'>7</span>
<span class='line'>8</span>
<span class='line'>9</span>
<span class='line'>10</span>
<span class='line'>11</span>
<span class='line'>12</span>
<span class='line'>13</span>
<span class='line'>14</span>
<span class='line'>15</span>
<span class='line'>16</span>
<span class='line'>17</span>
<span class='line'>18</span>
</pre></td><td class='code' width='100%'><pre><code class='xml'><div class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</div><div class='line'><span class="nt">&lt;package</span> <span class="nt">&gt;</span>
</div><div class='line'>  <span class="nt">&lt;metadata&gt;</span>
</div><div class='line'>    <span class="nt">&lt;id&gt;</span>$id$<span class="nt">&lt;/id&gt;</span>
</div><div class='line'>    <span class="nt">&lt;version&gt;</span>$version$<span class="nt">&lt;/version&gt;</span>
</div><div class='line'>    <span class="nt">&lt;title&gt;</span>$title$<span class="nt">&lt;/title&gt;</span>
</div><div class='line'>    <span class="nt">&lt;authors&gt;</span>$author$<span class="nt">&lt;/authors&gt;</span>
</div><div class='line'>    <span class="nt">&lt;owners&gt;</span>$author$<span class="nt">&lt;/owners&gt;</span>
</div><div class='line'>    <span class="nt">&lt;licenseUrl&gt;</span>http://www.gnu.org/licenses<span class="nt">&lt;/licenseUrl&gt;</span>
</div><div class='line'>    <span class="nt">&lt;projectUrl&gt;</span>https://github.com/NIPOSoftware/Nfield-SDK<span class="nt">&lt;/projectUrl&gt;</span>
</div><div class='line'>    <span class="nt">&lt;iconUrl&gt;</span>https://raw.githubusercontent.com/NIPOSoftware/Nfield-SDK/development/icon-nfield.png<span class="nt">&lt;/iconUrl&gt;</span>
</div><div class='line'>    <span class="nt">&lt;requireLicenseAcceptance&gt;</span>false<span class="nt">&lt;/requireLicenseAcceptance&gt;</span>
</div><div class='line'>    <span class="nt">&lt;description&gt;</span>$description$<span class="nt">&lt;/description&gt;</span>
</div><div class='line'>    <span class="nt">&lt;releaseNotes&gt;&lt;/releaseNotes&gt;</span>
</div><div class='line'>    <span class="nt">&lt;copyright&gt;</span>Copyright © NIPO Software 2013<span class="nt">&lt;/copyright&gt;</span>
</div><div class='line'>    <span class="nt">&lt;tags&gt;</span>nfield marketresearch capi cawi<span class="nt">&lt;/tags&gt;</span>
</div><div class='line'>  <span class="nt">&lt;/metadata&gt;</span>
</div><div class='line'><span class="nt">&lt;/package&gt;</span></div></code></pre></td></tr></table></div></figure>


<p>After running the same nuget pack command one more time, the package is successfully created.</p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/SuccessfulPackageCreation_1.png" alt="Nfield SDK - Successful Package Creation 1" /></p>

<p>And here is how the package (.nupkg) looks like in the library folder:</p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/SuccessfulPackageCreation_2.png" alt="Nfield SDK - Successful Package Creation 2" /></p>

<h3>4. Publishing the Nfield.SDK package to nuget</h3>

<p>Now I have my nuget package file waiting to be published. Or wait&hellip; maybe I should test it before publishing it to the public NuGet repository. There is a way to create a local package repository on the local file system of the machine and test the package using this local nuget repository. But because this blog post is getting longer than I expected I will save it for another day.</p>

<p>Let&rsquo;s assume that I&rsquo;ve tested the Nfield.SDK nuget package and I&rsquo;m ready to publish it. First thing that is necessary is to get the long due NIPO Software account on nuget.org.</p>

<p>Checkout the screenshot below from nuget.org account page of NIPO Software. Two big buttons on the first row tells me that I can upload packages using nuget.org and I can also manage my existing packages. The other interesting information is the &ldquo;API Key&rdquo; at the bottom. This is a GUID that can be used from the nuget command utility. Using this key it&rsquo;s possible to publish nuget packages from the command line without signing in to nuget.org.</p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/NIPOSoftware-NuGet.png" alt="Nipo Software NuGet Account" /></p>

<p>So this means it&rsquo;s possible to publish a nuget package both using nuget.exe from command line and using nuget.org. This is how nuget packages are pushed using nuget.exe:</p>

<figure class='code'><figcaption><span>publishing Nfield.SDK using nuget.exe</span></figcaption><div class="highlight"><table cellpadding="0" cellspacing="0"><tr><td class="gutter"><pre class="line-numbers"><span class='line'>1</span>
<span class='line'>2</span>
</pre></td><td class='code' width='100%'><pre><code class='bash'><div class='line'>nuget SetApiKey NIPOSoftware-API-Key
</div><div class='line'>nuget push Nfield.SDK.1.0.0.0.nupkg</div></code></pre></td></tr></table></div></figure>


<p>I took the other approach and directly uploaded the package using nuget.org web interface. After I uploaded the &ldquo;Nfield.SDK.1.0.0.0.nupkg&rdquo; file, nuget.org asked me to verify the details of the package before clicking publish the last time.</p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/VerifyingUpload_RightBeforePublish.png" alt="Nfield SDK - Verify NuGet Publish" /></p>

<p>All seems fine for now and I click publish. The package is published for the world to see. Below you see the Nfield.SDK page from the NuGet Gallery. Using &ldquo;Install-Package Nfield.SDK&rdquo; command from the VS Package Manager Console will install Nfield SDK to your project. Also notice near the bottom there is a section called &ldquo;Dependencies&rdquo;. Nfield.SDK depends on one other nuget package and it&rsquo;s visible here. This was automatically handled by nuget when I created the package using the .csproj file.</p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/SuccessfullyUploadedNfield.SDK.png" alt="Nfield SDK - Successfully uploaded to Nuget" /></p>

<p>So now as a final step, let&rsquo;s go to Visual Studio and find Nfield.SDK in package manager. Searching for Nfield brings me the Nfield.SDK package. Here is a screenshot right before I installed Nfield.SDK for my Nfield test project which I will discuss in my next blog post.</p>

<p><img src="http://www.hakantuncer.com/assets/NfieldSDK_Nuget/NfieldSDK_Online_InNuget.png" alt="Nfield SDK - Online in NuGet" /></p>

<p>Now that Nfield.SDK is online on NuGet, I can easily install and access it from my own projects. In the next blog post I&rsquo;ll show you how you can install Nfield.SDK and use it to do something useful &ndash; like adding an interviewer to your market research office.</p>

<p>Until then, take care.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Microsoft BUILD Conference 2012 – Thoughts &amp; Highlights]]></title>
    <link href="http://www.hakantuncer.com/blog/2012/11/18/microsoft-build-conference-2012-thoughts-and-highlights/"/>
    <updated>2012-11-18T18:29:03+01:00</updated>
    <id>http://www.hakantuncer.com/blog/2012/11/18/microsoft-build-conference-2012-thoughts-and-highlights</id>
    <content type="html"><![CDATA[<p>Microsoft is heading towards a new era with it’s Windows ecosystem and Azure cloud platform.</p>

<h2>Azure adoption on fire</h2>


<p>It’s been repeated several times during the conference that Microsoft is surprised by the demand to their Windows Azure cloud computing platform. In his session, Mark Russinovich mentioned that getting a new  Azure datacenter up and running from the decision phase to reality takes about one and a half years and at the moment they’re constantly investing in new datacenters.</p>

<h2>Weak Windows Store App ecosystem</h2>


<p>On the other hand, the new Windows ecosystem, Windows RT and Windows Phone, are pretty latecomers in the market where iOS and Android devices heavily dominate. These new Windows operating systems and devices have been taken very positively by the tech media  in general but with one big question: Will the Windows app ecosystem be able to catch the momentum and compete with it’s competitors? This has been declared as the weakest spot of the new generation of Windows devices and Microsoft is well aware of it.</p>

<h2>Microsoft is Opening Up – A Mindset Shift</h2>


<p>This is the reason why Microsoft is doing everything it can to get developers on board and convince them building applications for the Windows store. They’ve been trying to present a compelling development story from design stage to submitting the app to the Windows Store, trying to make this a joyful experience for developers building Windows Store apps. They’re educating developers, giving them free ebooks, devices and a lot of sample applications. Everything is done for creating a rapid development momentum that will enrich the Windows Store with many applications.</p>

<p>Another part of this story is about  the steps that Microsoft is taking with it’s technical stack. For many years Microsoft had been very exclusionary of software languages and stacks that were not “invented” under it’s control. Every solution Microsoft was offering needed to be 100% Microsoft.</p>

<p>This “not invented here” mentality seems to be fading away. Microsoft has been investing heavily on Javascript. Chakra engine of IE, the TypeScript language and the Javascript API’s of Windows RT are clear examples of this investment. Strange enough, a Windows 8 application can now completely be written using Javascript, CSS and HTML. Smart move to get more developer support, which is now very critical for Microsoft.</p>

<p>Who would think one day someone would be able to run Linux servers on Microsoft datacenters? Or Azure Command Line Tools would be written in Javascript using Node.js. Microsoft is definitely opening up.</p>

<h2>Some Highlights from the Trip</h2>




<br>


<h5>Monday – October 29</h5>


<ul>
<li>It was somewhat stressful to fly on the worst day of Hurricane Sandy. Fortunately the flight was not cancelled. The route was over the Greenland and there was quite some scene through the window.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/MountainsFromPlane.JPG" alt="Mountains from the plane" /></p>

<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/Flight_Map.JPG" alt="Flight map" /></p>

<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/IceEverywhere.JPG" alt="Ice everywhere" /></p>

<br>


<ul>
<li>First day was only about registration. There was a long registration queue all day but fortunately it  got much shorter later around 19:00. And I got my badge.</li>
</ul>


<br>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/BuildBadge.jpg" alt="Build Badge" /></p>

<h5>Tuesday – October 30</h5>


<ul>
<li>Heading to the tent for breakfast. Further down, there is a much bigger tent with a Windows logo on it. That’s where keynotes will take place.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/TreesRedmond.JPG" alt="BigTent" /></p>

<ul>
<li><p>First keynote was given by Steve Ballmer, CEO of Microsoft. It was about the most important delivery of Microsoft: Windows 8. About how the family of Windows 8 PC’s and mobile devices live in harmony together, with SkyDrive backing them up.</p></li>
<li><p>Steve Ballmer actually gave a demo himself, which was unusual but I think very positive. It’s a general expectation these days: CEO of a high tech company should be “hands on” with the technology. Technically savvy managers are more popular indeed. It looks like Steve also pushes himself towards that direction.</p></li>
<li><p>You can watch the whole show here:</p></li>
</ul>


<p> <a href="http://channel9.msdn.com/Events/Build/2012/1-001">http://channel9.msdn.com/Events/Build/2012/1-001</a></p>

<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/IMG_0091.JPG" alt="BallmerOnStage" /></p>

<ul>
<li><p>This first day was completely about Windows 8. In fact, Azure Cloud Platform would be the topic of the second keynote on the second day of BUILD conference.</p></li>
<li><p>We were having breakfast and lunch in the big tents that were built right next to the conference buildings. Yes, tents are not very exciting but the food was.</p></li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/photo1.jpg" alt="Good Food" /></p>

<h5>Wednesday – October 31</h5>


<ul>
<li>The second keynote of the BUILD conference was about the other important pursuit of Microsoft, the Azure Cloud, and the applications that developers can build into it. Applications that can be built lego style, using the tools and pulling the libraries as you like.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/IMG_0122.JPG" alt="Second Keynote" /></p>

<ul>
<li>Scott Guthrie presented Azure Mobile &amp; Media Services and Hanselman gave a short demo of new ASP.NET features and support for known social networks. All applications written during demos are eventually getting deployed on Azure. So basically now Azure plays a role in every server side technology of Microsoft.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/IMG_0127.JPG" alt="Scott Guthrie" /></p>

<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/IMG_0128.JPG" alt="Hanselman" /></p>

<ul>
<li>After the keynote, heading towards the session buildings. And the red trees of Seattle…</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/IMG_0131.JPG" alt="Redmond Red Trees" /></p>

<h5>Thursday – November 1</h5>


<ul>
<li>There were four rooms where you can borrow some brain from the experts. Everyone had certain office hours. This was not a very easy experience though. For some of these brains one had to wait a long time in the queue.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/photo.jpg" alt="Brain Box" /></p>

<ul>
<li>Channel9 broadcasting studio. It was in the same building where some of the sessions took place.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/IMG_0108.JPG" alt="Channel 9" /></p>

<ul>
<li>BUILD conference map on the ground.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/IMG_0109.jpg" alt="Conference Map" /></p>

<h5>Friday – November 2</h5>


<p></p>

<ul>
<li>Two public figures Scott Hanselman and Jon Galloway preparing for the last session of the BUILD.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/IMG_0211.JPG" alt="Build Last Session" /></p>

<ul>
<li>This strange sign took my attention.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/IMG_0203.jpg" alt="Strange Notification" /></p>

<h5>Saturday – November 3</h5>


<ul>
<li><p>At the final day of my trip, after the conference, I found some time to hang around in Seattle.</p></li>
<li><p>A Windows Store in Seattle. At the time of this writing, there are around 60 of these in various states  in U.S.</p></li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/img_0057.jpg" alt="Windows Store in Seattle" /></p>

<ul>
<li>Seattle is the birthplace of Starbucks. As a matter of fact, this Starbucks shop is where it all started.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/IMG_0267.JPG" alt="Birthplace of Starbucks" /></p>

<ul>
<li>Somewhere in Seattle, a building on which everybody is sticking gums. I don’t know the reason or the story behind it. But it was really disgusting to be there next to it…</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/img_02821.jpg" alt="Gum Wall" /></p>

<ul>
<li>Space Needle is one of the symbols of Seattle. I also went up there, obviously a great view.</li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/img_0350.jpg" alt="Seattle Space Needle" /></p>

<ul>
<li>I’ve also seen Chihuly’s Garden &amp; Glass Exhibition. The art here was truly amazing.
<a href="http://www.chihulygardenandglass.com/" target="_blank">Chihuly Garden And Glass &ndash; Website</a></li>
</ul>


<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/img_0361.jpg" alt="Seattle Space Needle" /></p>

<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/img_0329.jpg" alt="Seattle Space Needle" /></p>

<p><img src="http://www.hakantuncer.com/assets/BuildConference_2012/img_0338.jpg" alt="Seattle Space Needle" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Startup Weekend Amsterdam Experience]]></title>
    <link href="http://www.hakantuncer.com/blog/2010/10/20/startup-weekend-amsterdam-experience/"/>
    <updated>2010-10-20T20:52:30+02:00</updated>
    <id>http://www.hakantuncer.com/blog/2010/10/20/startup-weekend-amsterdam-experience</id>
    <content type="html"><![CDATA[<p>A few weeks ago I attended Startup Weeekend Amsterdam. I should say, it was really a weekend full of ideas, creativity, productivity and nice people.</p>

<p>To describe very briefly, Startup Weekend events are short, weekend long events that are organized all around the world where attenders join together to pitch ideas and build products/services around those ideas. It is all self-contained. Everything is done by the attenders, from pitching ideas to forming teams, working over the weekend to realize those ideas and presenting them to the panelists. The organization behind Startup Weekend  provides place, food and the panelists. ;) ..and by the way, as far as I heard, they’re not earning money from these events.</p>

<p><img src="http://www.hakantuncer.com/assets/StartupWeekendAmsterdam/img_1674.jpg" alt="Startup Weekend Amsterdam" /></p>

<p>I payed around €60 and bought a software developer ticket for myself. Tickets are simply attached to roles like marketing, sales, law, software development etc.. There was also one called “Jack of all Trades” for those who wanted to cheat a little bit.</p>

<p>Friday evening, event started with a brief introduction talk and afterwards, attenders with ideas started taking turns and presenting their ideas. Everybody had like a minute and a half to introduce their ideas. Around 40 people made a pitch, which I heard is a pretty good number compared to the number of ideas presented in other Startup Weekend sessions around the world. This idea pitching section was followed by a short break and a voting session.</p>

<p>Owners of 8-10 ideas receiving the highest number of votes took turns again to talk for another 30 seconds and call people to join their team. This part was especially fun because idea owners were trying to do all kinds of things to attract other people to work for them over the weekend.</p>

<p>I watched teams evolve in about 45 minutes.. It was like a party where everybody was talking to each other. Once a group of people form a team, they were moving to the study room, which was a quite cool place. There were no any sort of rules for forming teams.. No restrictions. Whoever had their teams ready, were moving on.</p>

<p>I worked in two teams throughout the weekend and kept an eye on other teams. Just for fun.. Watching how things were developing from being bare concepts / ideas in to something concrete was really interesting.. These people didn’t know each other few hours before and now they were working together to accomplish something.</p>

<p>On Sunday evening, teams presented their business ideas along with their weekend accomplishments to the panelists. Every team had 3 minutes to show their magic. From there on, panelists made their decisions about the winners. There were technologists, entrepreneurs, lawyers and investors among the panelists (you can find them on Startup Weekend Amsterdam).</p>

<p>A couple of  ideas I liked:</p>

<ul>
<li>Japps.me (Job application management tool): Having hard time following and managing your job applications? Using this tool you might have kept track of your job applications, related conversations, statuses etc.. I think it is a very good idea, but of course the implementation matters a lot.
Pulsetree (Social idea mining tool): Now it is very obvious to me that this is going to be a very hot/big concept soon.</li>
<li><p>It is about hooking up to social networks, blogs etc. (via API’s) to sniff opinions about products or companies and preferably allowing companies to engage with the opinion makers. Catching the opinions about their products and engaging with the opinion makers will be something vital for large companies.</p></li>
<li><p>123 Dress me: The idea was mainly started with an iPhone application in which users can put the photos of their clothes in their closet in a top, middle and bottom manner. Then this application will allow them to match their clothes and give them an idea about what new combinations they can try. This opens many possibilities like displaying ads from stores, and now you can match your existing clothes with pieces from stores, and even order them with a single tap maybe..</p></li>
<li><p>Alter-Ego (a smart phone game about sustainability) : Inspired by mobile games that are tightly integrated with player’s real life, these guys are putting real life goals for the players and letting them earn points based on their real life accomplishments. Although verifying many types of accomplishments are impossible and made me very skeptic about this game’s future, the idea really fits well into the current trend. (Some accomplishments are like taking the public transportation instead of your car, or using nature friendly commodities and helping the sustainability). These guys were chosen as winners and won free office space in Amsterdam for a year.</p></li>
</ul>


<p>The location was a courtesy of “Kennedy Van der Laan”. And organizers said that it was the best place they’d ever gotten so far.. Indeed the building was very nicely decorated. I should say, it was a right place to start a company. :)</p>
]]></content>
  </entry>
  
</feed>
